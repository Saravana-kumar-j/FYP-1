/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@web-std";
exports.ids = ["vendor-chunks/@web-std"];
exports.modules = {

/***/ "(ssr)/./node_modules/@web-std/stream/src/stream.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/stream/src/stream.cjs ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("try {\n  module.exports = __webpack_require__(/*! stream/web */ \"stream/web\")\n} catch (error) {\n  module.exports = __webpack_require__(/*! web-streams-polyfill/ponyfill */ \"(ssr)/./node_modules/web-streams-polyfill/dist/ponyfill.mjs\")\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9zdHJlYW0uY2pzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBRSxvRUFBc0M7QUFDeEMsRUFBRTtBQUNGLEVBQUUsd0lBQXlEO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9zdHJlYW0vc3JjL3N0cmVhbS5janM/N2EyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ0cnkge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJzdHJlYW0vd2ViXCIpXG59IGNhdGNoIChlcnJvcikge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ3ZWItc3RyZWFtcy1wb2x5ZmlsbC9wb255ZmlsbFwiKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/stream/src/stream.cjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/blob.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/blob/src/blob.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/package.js\");\n\n\n/**\n * @implements {globalThis.Blob}\n */\nconst WebBlob = class Blob {\n  /**\n   * @param {BlobPart[]} [init]\n   * @param {BlobPropertyBag} [options]\n   */\n  constructor(init = [], options = {}) {\n    /** @type {Uint8Array[]} */\n    const parts = []\n\n    let size = 0\n    for (const part of init) {\n      if (typeof part === \"string\") {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(part)\n        parts.push(bytes)\n        size += bytes.byteLength\n      } else if (part instanceof WebBlob) {\n        size += part.size\n        // @ts-ignore - `_parts` is marked private so TS will complain about\n        // accessing it.\n        parts.push(...part._parts)\n      } else if (part instanceof ArrayBuffer) {\n        parts.push(new Uint8Array(part))\n        size += part.byteLength\n      } else if (part instanceof Uint8Array) {\n        parts.push(part)\n        size += part.byteLength\n      } else if (ArrayBuffer.isView(part)) {\n        const { buffer, byteOffset, byteLength } = part\n        parts.push(new Uint8Array(buffer, byteOffset, byteLength))\n        size += byteLength\n      } else {\n        const bytes = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder().encode(String(part))\n        parts.push(bytes)\n        size += bytes.byteLength\n      }\n    }\n\n    /** @private */\n    this._size = size\n    /** @private */\n    this._type = readType(options.type)\n    /** @private */\n    this._parts = parts\n\n    Object.defineProperties(this, {\n      _size: { enumerable: false },\n      _type: { enumerable: false },\n      _parts: { enumerable: false },\n    })\n  }\n\n  /**\n   * A string indicating the MIME type of the data contained in the Blob.\n   * If the type is unknown, this string is empty.\n   * @type {string}\n   */\n  get type() {\n    return this._type\n  }\n  /**\n   * The size, in bytes, of the data contained in the Blob object.\n   * @type {number}\n   */\n  get size() {\n    return this._size\n  }\n\n  /**\n   * Returns a new Blob object containing the data in the specified range of\n   * bytes of the blob on which it's called.\n   * @param {number} [start=0] - An index into the Blob indicating the first\n   * byte to include in the new Blob. If you specify a negative value, it's\n   * treated as an offset from the end of the Blob toward the beginning. For\n   * example, `-10` would be the 10th from last byte in the Blob. The default\n   * value is `0`. If you specify a value for start that is larger than the\n   * size of the source Blob, the returned Blob has size 0 and contains no\n   * data.\n   * @param {number} [end] - An index into the `Blob` indicating the first byte\n   *  that will *not* be included in the new `Blob` (i.e. the byte exactly at\n   * this index is not included). If you specify a negative value, it's treated\n   * as an offset from the end of the Blob toward the beginning. For example,\n   * `-10` would be the 10th from last byte in the `Blob`. The default value is\n   * size.\n   * @param {string} [type] - The content type to assign to the new Blob;\n   * this will be the value of its type property. The default value is an empty\n   * string.\n   * @returns {Blob}\n   */\n  slice(start = 0, end = this.size, type = \"\") {\n    const { size, _parts } = this\n    let offset = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n\n    let limit = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n    const span = Math.max(limit - offset, 0)\n    const blob = new Blob([], { type })\n\n    if (span === 0) {\n      return blob\n    }\n\n    let blobSize = 0\n    const blobParts = []\n    for (const part of _parts) {\n      const { byteLength } = part\n      if (offset > 0 && byteLength <= offset) {\n        offset -= byteLength\n        limit -= byteLength\n      } else {\n        const chunk = part.subarray(offset, Math.min(byteLength, limit))\n        blobParts.push(chunk)\n        blobSize += chunk.byteLength\n        // no longer need to take that into account\n        offset = 0\n\n        // don't add the overflow to new blobParts\n        if (blobSize >= span) {\n          break\n        }\n      }\n    }\n\n    blob._parts = blobParts\n    blob._size = blobSize\n\n    return blob\n  }\n\n  /**\n   * Returns a promise that resolves with an ArrayBuffer containing the entire\n   * contents of the Blob as binary data.\n   * @returns {Promise<ArrayBuffer>}\n   */\n  // eslint-disable-next-line require-await\n  async arrayBuffer() {\n    const buffer = new ArrayBuffer(this.size)\n    const bytes = new Uint8Array(buffer)\n    let offset = 0\n    for (const part of this._parts) {\n      bytes.set(part, offset)\n      offset += part.byteLength\n    }\n    return buffer\n  }\n\n  /**\n   * Returns a promise that resolves with a USVString containing the entire\n   * contents of the Blob interpreted as UTF-8 text.\n   * @returns {Promise<string>}\n   */\n  // eslint-disable-next-line require-await\n  async text() {\n    const decoder = new _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder()\n    let text = \"\"\n    for (const part of this._parts) {\n      text += decoder.decode(part)\n    }\n    return text\n  }\n\n  /**\n   * @returns {BlobStream}\n   */\n  stream() {\n    return new BlobStream(this._parts)\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return \"[object Blob]\"\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"Blob\"\n  }\n}\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.Blob} */\nconst Blob = WebBlob\n\n/**\n * Blob stream is a `ReadableStream` extension optimized to have minimal\n * overhead when consumed as `AsyncIterable<Uint8Array>`.\n * @extends {ReadableStream<Uint8Array>}\n * @implements {AsyncIterable<Uint8Array>}\n */\nclass BlobStream extends _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream {\n  /**\n   * @param {Uint8Array[]} chunks\n   */\n  constructor(chunks) {\n    // @ts-ignore\n    super(new BlobStreamController(chunks.values()), { type: \"bytes\" })\n    /** @private */\n    this._chunks = chunks\n  }\n\n  /**\n   * @param {Object} [_options]\n   * @property {boolean} [_options.preventCancel]\n   * @returns {AsyncIterator<Uint8Array>}\n   */\n  async *[Symbol.asyncIterator](_options) {\n    const reader = this.getReader()\n    yield* this._chunks\n    reader.releaseLock()\n  }\n}\n\nclass BlobStreamController {\n  /**\n   * @param {Iterator<Uint8Array>} chunks\n   */\n  constructor(chunks) {\n    this.chunks = chunks\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  start(controller) {\n    this.work(controller)\n    this.isWorking = false\n    this.isCancelled = false\n  }\n  /**\n   *\n   * @param {ReadableStreamDefaultController} controller\n   */\n  async work(controller) {\n    const { chunks } = this\n\n    this.isWorking = true\n    while (!this.isCancelled && (controller.desiredSize || 0) > 0) {\n      let next = null\n      try {\n        next = chunks.next()\n      } catch (error) {\n        controller.error(error)\n        break\n      }\n\n      if (next) {\n        if (!next.done && !this.isCancelled) {\n          controller.enqueue(next.value)\n        } else {\n          controller.close()\n        }\n      }\n    }\n\n    this.isWorking = false\n  }\n\n  /**\n   * @param {ReadableStreamDefaultController} controller\n   */\n  pull(controller) {\n    if (!this.isWorking) {\n      this.work(controller)\n    }\n  }\n  cancel() {\n    this.isCancelled = true\n  }\n}\n\n/**\n * @param {string} [input]\n * @returns {string}\n */\nconst readType = (input = \"\") => {\n  const type = String(input).toLowerCase()\n  return /[^\\u0020-\\u007E]/.test(type) ? \"\" : type\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/blob.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/blob/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* binding */ Blob),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/package.js\");\n/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blob.js */ \"(ssr)/./node_modules/@web-std/blob/src/blob.js\");\n\n// import { Blob as NodeBlob } from \"./blob.node.js\"\n;\n\n/** @type {typeof globalThis.Blob} */\n// Our first choise is to use global `Blob` because it may be available e.g. in\n// electron renderrer process. If not available fall back to node native\n// implementation, if also not available use our implementation.\nconst Blob =\n  globalThis.Blob || \n  // Disable node native blob until impractical perf issue is fixed\n  // @see https://github.com/nodejs/node/issues/42108\n  // NodeBlob ||\n  _blob_js__WEBPACK_IMPORTED_MODULE_1__.Blob\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVFO0FBQ3ZFLFlBQVksbUJBQW1CO0FBQy9CLENBQTJDOztBQUUzQyxXQUFXLHdCQUF3QjtBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwQ0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2QtbWFuZGF0ZXMvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvbGliLm5vZGUuanM/NzkwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBUZXh0RW5jb2RlciwgVGV4dERlY29kZXIsIFJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIi4vcGFja2FnZS5qc1wiXG4vLyBpbXBvcnQgeyBCbG9iIGFzIE5vZGVCbG9iIH0gZnJvbSBcIi4vYmxvYi5ub2RlLmpzXCJcbmltcG9ydCB7IEJsb2IgYXMgV2ViQmxvYiB9IGZyb20gXCIuL2Jsb2IuanNcIlxuXG4vKiogQHR5cGUge3R5cGVvZiBnbG9iYWxUaGlzLkJsb2J9ICovXG4vLyBPdXIgZmlyc3QgY2hvaXNlIGlzIHRvIHVzZSBnbG9iYWwgYEJsb2JgIGJlY2F1c2UgaXQgbWF5IGJlIGF2YWlsYWJsZSBlLmcuIGluXG4vLyBlbGVjdHJvbiByZW5kZXJyZXIgcHJvY2Vzcy4gSWYgbm90IGF2YWlsYWJsZSBmYWxsIGJhY2sgdG8gbm9kZSBuYXRpdmVcbi8vIGltcGxlbWVudGF0aW9uLCBpZiBhbHNvIG5vdCBhdmFpbGFibGUgdXNlIG91ciBpbXBsZW1lbnRhdGlvbi5cbmV4cG9ydCBjb25zdCBCbG9iID1cbiAgZ2xvYmFsVGhpcy5CbG9iIHx8IFxuICAvLyBEaXNhYmxlIG5vZGUgbmF0aXZlIGJsb2IgdW50aWwgaW1wcmFjdGljYWwgcGVyZiBpc3N1ZSBpcyBmaXhlZFxuICAvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNDIxMDhcbiAgLy8gTm9kZUJsb2IgfHxcbiAgV2ViQmxvYlxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/blob/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/blob/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _web_std_stream__WEBPACK_IMPORTED_MODULE_1__.ReadableStream),\n/* harmony export */   TextDecoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextDecoder),\n/* harmony export */   TextEncoder: () => (/* reexport safe */ web_encoding__WEBPACK_IMPORTED_MODULE_0__.TextEncoder)\n/* harmony export */ });\n/* harmony import */ var web_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web-encoding */ \"(ssr)/./node_modules/web-encoding/src/lib.mjs\");\n/* harmony import */ var _web_std_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web-std/stream */ \"(ssr)/./node_modules/@web-std/stream/src/lib.node.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvYmxvYi9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1RDtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9ibG9iL3NyYy9wYWNrYWdlLmpzP2IzODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgVGV4dEVuY29kZXIsIFRleHREZWNvZGVyIH0gZnJvbSBcIndlYi1lbmNvZGluZ1wiXG5leHBvcnQgeyBSZWFkYWJsZVN0cmVhbSB9IGZyb20gXCJAd2ViLXN0ZC9zdHJlYW1cIlxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/blob/src/package.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/body.js":
/*!*************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/body.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   \"default\": () => (/* binding */ Body),\n/* harmony export */   extractContentType: () => (/* binding */ extractContentType),\n/* harmony export */   fromAsyncIterable: () => (/* binding */ fromAsyncIterable),\n/* harmony export */   fromStream: () => (/* binding */ fromStream),\n/* harmony export */   getTotalBytes: () => (/* binding */ getTotalBytes),\n/* harmony export */   streamIterator: () => (/* binding */ streamIterator),\n/* harmony export */   writeToStream: () => (/* binding */ writeToStream)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_base_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors/base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n/* harmony import */ var _utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/form-data.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/utf8.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js\");\n// @ts-check\n/**\n * Body.js\n *\n * Body interface provides common methods for Request and Response\n */\n\n\n\n\n\n\n\n\n\n\n\nconst {readableHighWaterMark} = new stream__WEBPACK_IMPORTED_MODULE_0__.Readable();\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n * @implements {globalThis.Body}\n */\n\nclass Body {\n\t/**\n\t * @param {BodyInit|Stream|null} body\n\t * @param {{size?:number}} options\n\t */\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tconst state = {\n\t\t\t/** @type {null|ReadableStream<Uint8Array>} */\n\t\t\tbody: null,\n\t\t\t/** @type {string|null} */\n\t\t\ttype: null,\n\t\t\t/** @type {number|null} */\n\t\t\tsize: null,\n\t\t\t/** @type {null|string} */\n\t\t\tboundary: null,\n\t\t\tdisturbed: false,\n\t\t\t/** @type {null|Error} */\n\t\t\terror: null\n\t\t};\n\t\t/** @private */\n\t\tthis[INTERNALS] = state;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tstate.body = null;\n\t\t\tstate.size = 0;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isURLSearchParameters)(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(body.toString());\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.type = 'application/x-www-form-urlencoded;charset=UTF-8';\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(body)) {\n\t\t\t// Body is blob\n\t\t\tstate.size = body.size;\n\t\t\tstate.type = body.type || null;\n\t\t\tstate.body = body.stream();\n\t\t} else if (body instanceof Uint8Array) {\n\t\t\t// Body is Buffer\n\t\t\tstate.body = fromBytes(body);\n\t\t\tstate.size = body.byteLength;\n\t\t} else if (util__WEBPACK_IMPORTED_MODULE_1__.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tconst bytes = new Uint8Array(body);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tconst bytes = new Uint8Array(body.buffer, body.byteOffset, body.byteLength);\n\t\t\tstate.body = fromBytes(bytes);\n\t\t\tstate.size = bytes.byteLength;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isReadableStream)(body)) {\n\t\t\t// Body is stream\n\t\t\tstate.body = body;\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFormData)(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tconst boundary = `NodeFetchFormDataBoundary${(0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getBoundary)()}`;\n\t\t\tstate.type = `multipart/form-data; boundary=${boundary}`;\n\t\t\tstate.size = (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.getFormDataLength)(body, boundary);\n\t\t\tstate.body = fromAsyncIterable((0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.formDataIterator)(body, boundary));\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMultipartFormDataStream)(body)) {\n\t\t\tstate.type = `multipart/form-data; boundary=${body.getBoundary()}`;\n\t\t\tstate.size = body.hasKnownLength() ? body.getLengthSync() : null;\n\t\t\tstate.body = fromStream(body);\n\t\t} else if (body instanceof stream__WEBPACK_IMPORTED_MODULE_0__) {\n\t\t\tstate.body = fromStream(body);\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tconst bytes = _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.encode(String(body));\n\t\t\tstate.type = 'text/plain;charset=UTF-8';\n\t\t\tstate.size = bytes.byteLength;\n\t\t\tstate.body = fromBytes(bytes);\n\t\t}\n\n\t\tthis.size = size;\n\n\t\t// if (body instanceof Stream) {\n\t\t// \tbody.on('error', err => {\n\t\t// \t\tconst error = err instanceof FetchBaseError ?\n\t\t// \t\t\terr :\n\t\t// \t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, 'system', err);\n\t\t// \t\tthis[INTERNALS].error = error;\n\t\t// \t});\n\t\t// }\n\t}\n\n\t/** @type {Headers} */\n\t/* c8 ignore next 3 */\n\tget headers() {\n\t\tthrow new TypeError(`'get headers' called on an object that does not implements interface.`)\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].type) || '';\n\t\tconst buf = await consumeBody(this);\n\n\t\treturn new _package_js__WEBPACK_IMPORTED_MODULE_5__.Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\treturn JSON.parse(await this.text());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn _utils_utf8_js__WEBPACK_IMPORTED_MODULE_3__.decode(buffer);\n\t}\n\n\t/**\n\t * @returns {Promise<FormData>}\n\t */\n\n\tasync formData() {\n\t\treturn (0,_utils_form_data_js__WEBPACK_IMPORTED_MODULE_4__.toFormData)(this)\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true},\n\tformData: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @param {Body & {url?:string}} data\n * @return {Promise<Uint8Array>}\n */\nasync function consumeBody(data) {\n\tconst state = data[INTERNALS];\n\tif (state.disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tstate.disturbed = true;\n\n\tif (state.error) {\n\t\tthrow state.error;\n\t}\n\n\tconst {body} = state;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\t/** @type {[Uint8Array|null, Uint8Array[], number]} */\n\tconst [buffer, chunks, limit] = data.size > 0 ?\n\t\t[new Uint8Array(data.size), [], data.size] :\n\t\t[null, [], Infinity];\n\tlet offset = 0;\n\n\tconst source = streamIterator(body);\n\ttry {\n\t\tfor await (const chunk of source) {\n\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\tchunk :\n\t\t\t\tBuffer.from(chunk);\n\n\t\t\tif (offset + bytes.byteLength > limit) {\n\t\t\t\tconst error = new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`content size at ${data.url} over limit: ${limit}`, 'max-size');\n\t\t\t\tsource.throw(error);\n\t\t\t\tthrow error;\n\t\t\t} else if (buffer) {\n\t\t\t\tbuffer.set(bytes, offset);\n\t\t\t} else {\n\t\t\t\tchunks.push(bytes);\n\t\t\t}\n\n\t\t\toffset += bytes.byteLength;\n\t\t}\n\n\t\tif (buffer) {\n\t\t\tif (offset < buffer.byteLength) {\n\t\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Premature close of server response while trying to fetch ${data.url}`, 'premature-close');\n\t\t\t} else {\n\t\t\t\treturn buffer;\n\t\t\t}\n\t\t} else {\n\t\t\treturn writeBytes(new Uint8Array(offset), chunks);\n\t\t}\n\t} catch (error) {\n\t\tif (error instanceof _errors_base_js__WEBPACK_IMPORTED_MODULE_7__.FetchBaseError) {\n\t\t\tthrow error;\n\t\t// @ts-expect-error - we know it will have a name\n\t\t} else if (error && error.name === 'AbortError') {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconst e = /** @type {import('./errors/fetch-error').SystemError} */(error)\n\t\t\t// Other errors, such as incorrect content-encoding\n\t\t\tthrow new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_6__.FetchError(`Invalid response body while trying to fetch ${data.url}: ${e.message}`, 'system', e);\n\t\t}\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param {Body} instance       Response or Request instance\n * @return {ReadableStream<Uint8Array> | null}\n */\nconst clone = instance => {\n\tconst {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\tconst [left, right] = body.tee();\n\tinstance[INTERNALS].body = left;\n\treturn right;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {Body} source Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = source => source[INTERNALS].type;\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {Body} source - Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = source => source[INTERNALS].size;\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest - The stream to write to.\n * @param {Body} source - Body object from the Body instance.\n * @returns {void}\n */\nconst writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else {\n\t\tstream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(streamIterator(body)).pipe(dest);\n\t}\n};\n\n/**\n * @template T\n * @implements {AsyncGenerator<T, void, void>}\n */\nclass StreamIterableIterator {\n\t/**\n\t * @param {ReadableStream<T>} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.stream = stream;\n\t\tthis.reader = null;\n\t}\n\n\t/**\n\t * @returns {AsyncGenerator<T, void, void>}\n\t */\n\t[Symbol.asyncIterator]() {\n\t\treturn this;\n\t}\n\n\tgetReader() {\n\t\tif (this.reader) {\n\t\t\treturn this.reader;\n\t\t}\n\n\t\tconst reader = this.stream.getReader();\n\t\tthis.reader = reader;\n\t\treturn reader;\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tnext() {\n\t\treturn /** @type {Promise<IteratorResult<T, void>>} */ (this.getReader().read());\n\t}\n\n\t/**\n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync return() {\n\t\tif (this.reader) {\n\t\t\tawait this.reader.cancel();\n\t\t}\n\n\t\treturn {done: true, value: undefined};\n\t}\n\n\t/**\n\t * \n\t * @param {any} error \n\t * @returns {Promise<IteratorResult<T, void>>}\n\t */\n\tasync throw(error) {\n\t\tawait this.getReader().cancel(error);\n\t\treturn {done: true, value: undefined};\n\t}\n}\n\n/**\n * @template T\n * @param {ReadableStream<T>} stream\n */\nconst streamIterator = stream => new StreamIterableIterator(stream);\n\n/**\n * @param {Uint8Array} buffer\n * @param {Uint8Array[]} chunks\n */\nconst writeBytes = (buffer, chunks) => {\n\tlet offset = 0;\n\tfor (const chunk of chunks) {\n\t\tbuffer.set(chunk, offset);\n\t\toffset += chunk.byteLength;\n\t}\n\n\treturn buffer;\n};\n\n/**\n * @param {Uint8Array} bytes\n * @returns {ReadableStream<Uint8Array>}\n */\n// @ts-ignore\nconst fromBytes = bytes => new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream({\n\tstart(controller) {\n\t\tcontroller.enqueue(bytes);\n\t\tcontroller.close();\n\t}\n});\n\n/**\n * @param {AsyncIterable<Uint8Array>} content\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromAsyncIterable = content =>\n\t// @ts-ignore\n\tnew _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(new AsyncIterablePump(content));\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n */\nclass AsyncIterablePump {\n\t/**\n\t * @param {AsyncIterable<Uint8Array>} source\n\t */\n\tconstructor(source) {\n\t\tthis.source = source[Symbol.asyncIterator]();\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tasync pull(controller) {\n\t\ttry {\n\t\t\twhile (controller.desiredSize || 0 > 0) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst next = await this.source.next();\n\t\t\t\tif (next.done) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(next.value);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcontroller.error(error);\n\t\t}\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (reason) {\n\t\t\tif (typeof this.source.throw === 'function') {\n\t\t\t\tthis.source.throw(reason);\n\t\t\t} else if (typeof this.source.return === 'function') {\n\t\t\t\tthis.source.return();\n\t\t\t}\n\t\t} else if (typeof this.source.return === 'function') {\n\t\t\tthis.source.return();\n\t\t}\n\t}\n}\n\n/**\n * @param {Stream & {readableHighWaterMark?:number}} source\n * @returns {ReadableStream<Uint8Array>}\n */\nconst fromStream = source => {\n\tconst pump = new StreamPump(source);\n\tconst stream = new _package_js__WEBPACK_IMPORTED_MODULE_5__.ReadableStream(pump, pump);\n\treturn stream;\n};\n\n/**\n * @implements {UnderlyingSource<Uint8Array>}\n * @implements {QueuingStrategy<Uint8Array>}\n */\nclass StreamPump {\n\t/**\n\t * @param {Stream & {\n\t * \treadableHighWaterMark?: number\n\t * \treadable?:boolean,\n\t * \tresume?: () => void,\n\t * \tpause?: () => void\n\t * \tdestroy?: (error?:Error) => void\n\t * }} stream\n\t */\n\tconstructor(stream) {\n\t\tthis.highWaterMark = stream.readableHighWaterMark || readableHighWaterMark;\n\t\tthis.accumalatedSize = 0;\n\t\tthis.stream = stream;\n\t\tthis.enqueue = this.enqueue.bind(this);\n\t\tthis.error = this.error.bind(this);\n\t\tthis.close = this.close.bind(this);\n\t}\n\n\t/**\n\t * @param {Uint8Array} [chunk]\n\t */\n\tsize(chunk) {\n\t\treturn chunk?.byteLength || 0;\n\t}\n\n\t/**\n\t * @param {ReadableStreamController<Uint8Array>} controller\n\t */\n\tstart(controller) {\n\t\tthis.controller = controller;\n\t\tthis.stream.on('data', this.enqueue);\n\t\tthis.stream.once('error', this.error);\n\t\tthis.stream.once('end', this.close);\n\t\tthis.stream.once('close', this.close);\n\t}\n\n\tpull() {\n\t\tthis.resume();\n\t}\n\n\t/**\n\t * @param {any} [reason]\n\t */\n\tcancel(reason) {\n\t\tif (this.stream.destroy) {\n\t\t\tthis.stream.destroy(reason);\n\t\t}\n\n\t\tthis.stream.off('data', this.enqueue);\n\t\tthis.stream.off('error', this.error);\n\t\tthis.stream.off('end', this.close);\n\t\tthis.stream.off('close', this.close);\n\t}\n\n\t/**\n\t * @param {Uint8Array|string} chunk\n\t */\n\tenqueue(chunk) {\n\t\tif (this.controller) {\n\t\t\ttry {\n\t\t\t\tconst bytes = chunk instanceof Uint8Array ?\n\t\t\t\t\tchunk :\n\t\t\t\t\tBuffer.from(chunk);\n\n\t\t\t\tconst available = (this.controller.desiredSize || 0) - bytes.byteLength;\n\t\t\t\tthis.controller.enqueue(bytes);\n\t\t\t\tif (available <= 0) {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.controller.error(new Error('Could not create Buffer, chunk must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object'));\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t}\n\t}\n\n\tpause() {\n\t\tif (this.stream.pause) {\n\t\t\tthis.stream.pause();\n\t\t}\n\t}\n\n\tresume() {\n\t\tif (this.stream.readable && this.stream.resume) {\n\t\t\tthis.stream.resume();\n\t\t}\n\t}\n\n\tclose() {\n\t\tif (this.controller) {\n\t\t\tthis.controller.close();\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n\n\t/**\n\t * @param {Error} error \n\t */\n\terror(error) {\n\t\tif (this.controller) {\n\t\t\tthis.controller.error(error);\n\t\t\tdelete this.controller;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/body.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/abort-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param {string} message \n\t * @param {string} [type]\n\t */\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9hYm9ydC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5Qzs7QUFFekM7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvZXJyb3JzL2Fib3J0LWVycm9yLmpzP2NmZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtGZXRjaEJhc2VFcnJvcn0gZnJvbSAnLi9iYXNlLmpzJztcblxuLyoqXG4gKiBBYm9ydEVycm9yIGludGVyZmFjZSBmb3IgY2FuY2VsbGVkIHJlcXVlc3RzXG4gKi9cbmV4cG9ydCBjbGFzcyBBYm9ydEVycm9yIGV4dGVuZHMgRmV0Y2hCYXNlRXJyb3Ige1xuXHQvKipcblx0ICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBbdHlwZV1cblx0ICovXG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHR5cGUgPSAnYWJvcnRlZCcpIHtcblx0XHRzdXBlcihtZXNzYWdlLCB0eXBlKTtcblx0fVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/base.js":
/*!********************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/base.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchBaseError: () => (/* binding */ FetchBaseError)\n/* harmony export */ });\n\n\nclass FetchBaseError extends Error {\n\t/**\n\t * @param {string} message \n\t * @param {string} type \n\t */\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFTjtBQUNQO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvZXJyb3JzL2Jhc2UuanM/OTM0YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBjbGFzcyBGZXRjaEJhc2VFcnJvciBleHRlbmRzIEVycm9yIHtcblx0LyoqXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFxuXHQgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSBcblx0ICovXG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHR5cGUpIHtcblx0XHRzdXBlcihtZXNzYWdlKTtcblx0XHQvLyBIaWRlIGN1c3RvbSBlcnJvciBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIGZyb20gZW5kLXVzZXJzXG5cdFx0RXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG5cblx0XHR0aGlzLnR5cGUgPSB0eXBlO1xuXHR9XG5cblx0Z2V0IG5hbWUoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZTtcblx0fVxuXG5cdGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcblx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuXHR9XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js":
/*!***************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/errors/fetch-error.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchError: () => (/* binding */ FetchError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/base.js\");\n\n\n\n/**\n * @typedef {{\n * address?: string\n * code: string\n * dest?: string\n * errno: number\n * info?: object\n * message: string\n * path?: string\n * port?: number\n * syscall: string\n * }} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} type -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9mZXRjaC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDeUM7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047O0FBRUE7QUFDQTtBQUNBO0FBQ08seUJBQXlCLG9EQUFjO0FBQzlDO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGFBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2QtbWFuZGF0ZXMvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2Vycm9ycy9mZXRjaC1lcnJvci5qcz85YTdmIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtGZXRjaEJhc2VFcnJvcn0gZnJvbSAnLi9iYXNlLmpzJztcblxuLyoqXG4gKiBAdHlwZWRlZiB7e1xuICogYWRkcmVzcz86IHN0cmluZ1xuICogY29kZTogc3RyaW5nXG4gKiBkZXN0Pzogc3RyaW5nXG4gKiBlcnJubzogbnVtYmVyXG4gKiBpbmZvPzogb2JqZWN0XG4gKiBtZXNzYWdlOiBzdHJpbmdcbiAqIHBhdGg/OiBzdHJpbmdcbiAqIHBvcnQ/OiBudW1iZXJcbiAqIHN5c2NhbGw6IHN0cmluZ1xuICogfX0gU3lzdGVtRXJyb3JcbiovXG5cbi8qKlxuICogRmV0Y2hFcnJvciBpbnRlcmZhY2UgZm9yIG9wZXJhdGlvbmFsIGVycm9yc1xuICovXG5leHBvcnQgY2xhc3MgRmV0Y2hFcnJvciBleHRlbmRzIEZldGNoQmFzZUVycm9yIHtcblx0LyoqXG5cdCAqIEBwYXJhbSAge3N0cmluZ30gbWVzc2FnZSAtICAgICAgRXJyb3IgbWVzc2FnZSBmb3IgaHVtYW5cblx0ICogQHBhcmFtICB7c3RyaW5nfSB0eXBlIC0gICAgICAgIEVycm9yIHR5cGUgZm9yIG1hY2hpbmVcblx0ICogQHBhcmFtICB7U3lzdGVtRXJyb3J9IFtzeXN0ZW1FcnJvcl0gLSBGb3IgTm9kZS5qcyBzeXN0ZW0gZXJyb3Jcblx0ICovXG5cdGNvbnN0cnVjdG9yKG1lc3NhZ2UsIHR5cGUsIHN5c3RlbUVycm9yKSB7XG5cdFx0c3VwZXIobWVzc2FnZSwgdHlwZSk7XG5cdFx0Ly8gV2hlbiBlcnIudHlwZSBpcyBgc3lzdGVtYCwgZXJyLmVycm9yZWRTeXNDYWxsIGNvbnRhaW5zIHN5c3RlbSBlcnJvciBhbmQgZXJyLmNvZGUgY29udGFpbnMgc3lzdGVtIGVycm9yIGNvZGVcblx0XHRpZiAoc3lzdGVtRXJyb3IpIHtcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tdWx0aS1hc3NpZ25cblx0XHRcdHRoaXMuY29kZSA9IHRoaXMuZXJybm8gPSBzeXN0ZW1FcnJvci5jb2RlO1xuXHRcdFx0dGhpcy5lcnJvcmVkU3lzQ2FsbCA9IHN5c3RlbUVycm9yLnN5c2NhbGw7XG5cdFx0fVxuXHR9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/fetch.js":
/*!**************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/fetch.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.Blob),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_12__.FormData),\n/* harmony export */   Headers: () => (/* reexport safe */ _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream),\n/* harmony export */   Request: () => (/* reexport safe */ _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   Response: () => (/* reexport safe */ _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zlib */ \"zlib\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var mrmime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mrmime */ \"(ssr)/./node_modules/mrmime/index.mjs\");\n/* harmony import */ var data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! data-uri-to-buffer */ \"(ssr)/./node_modules/data-uri-to-buffer/dist/src/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! buffer */ \"buffer\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _response_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./response.js */ \"(ssr)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./request.js */ \"(ssr)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./errors/fetch-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/fetch-error.js\");\n/* harmony import */ var _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./errors/abort-error.js */ \"(ssr)/./node_modules/@web-std/fetch/src/errors/abort-error.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:', 'file:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request.js').default} url - Absolute url or Request instance\n * @param   {RequestInit & import('./request.js').RequestExtraOptions} [options_] - Fetch options\n * @return  {Promise<import('./response.js').default>}\n */\nasync function fetch(url, options_ = {}) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](url, options_);\n\t\tconst options = (0,_request_js__WEBPACK_IMPORTED_MODULE_9__.getNodeRequestOptions)(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = data_uri_to_buffer__WEBPACK_IMPORTED_MODULE_5__(request.url.toString());\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (options.protocol === 'file:') {\n\t\t\tconst stream = fs__WEBPACK_IMPORTED_MODULE_3__.createReadStream(new URL(request.url))\n\t\t\tconst type = mrmime__WEBPACK_IMPORTED_MODULE_4__.lookup(request.url) || 'application/octet-stream'\n\t\t\tconst response = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](stream, {headers: {'Content-Type': type }});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https__WEBPACK_IMPORTED_MODULE_1__ : http__WEBPACK_IMPORTED_MODULE_0__).request;\n\t\tconst {signal} = request;\n\t\t/** @type {Response|null} */\n\t\tlet response = null;\n\t\t/** @type {import('http').IncomingMessage|null} */\n\t\tlet response_ = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new _errors_abort_error_js__WEBPACK_IMPORTED_MODULE_13__.AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body) {\n\t\t\t\trequest.body.cancel(error);\n\t\t\t}\n\n\t\t\tif (!response_) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse_.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', err => {\n\t\t\t// @ts-expect-error - err may not be SystemError\n\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, err => {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tresponse_?.emit(\"error\", err);\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = Object.assign(new Error('Premature close'), {\n\t\t\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse_?.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', incoming => {\n\t\t\tresponse_ = incoming;\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = (0,_headers_js__WEBPACK_IMPORTED_MODULE_8__.fromRawHeaders)(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif ((0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_15__.isRedirect)(Number(response_.statusCode))) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\theaders.set('Location', locationURL.toString());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new _headers_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\t// Note: We can not use `request.body` because send would have\n\t\t\t\t\t\t\t// consumed it already.\n\t\t\t\t\t\t\tbody: options_.body,\n\t\t\t\t\t\t\tsignal: signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tconst isStreamBody =\n\t\t\t\t\t\t\trequestOptions.body instanceof _package_js__WEBPACK_IMPORTED_MODULE_11__.ReadableStream ||\n\t\t\t\t\t\t\trequestOptions.body instanceof stream__WEBPACK_IMPORTED_MODULE_7__.Readable;\n\t\t\t\t\t\tif (response_.statusCode !== 303 && isStreamBody) {\n\t\t\t\t\t\t\treject(new _errors_fetch_error_js__WEBPACK_IMPORTED_MODULE_14__.FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tfetch(new _request_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](locationURL.href, requestOptions)).then(resolve, reject);\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib__WEBPACK_IMPORTED_MODULE_2__.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip(zlibOptions), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(response_, new stream__WEBPACK_IMPORTED_MODULE_7__.PassThrough(), reject);\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate(), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createInflateRaw(), reject);\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = (0,stream__WEBPACK_IMPORTED_MODULE_7__.pipeline)(body, zlib__WEBPACK_IMPORTED_MODULE_2__.createBrotliDecompress(), reject);\n\t\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new _response_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_body_js__WEBPACK_IMPORTED_MODULE_16__.fromAsyncIterable)(body), responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t(0,_body_js__WEBPACK_IMPORTED_MODULE_16__.writeToStream)(request_, request);\n\t});\n}\n\n/**\n *\n * @param {import('http').ClientRequest} request\n * @param {(error:Error) => void} errorCallback\n */\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\t/** @type {Buffer | undefined} */\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = Object.assign(new Error('Premature close'), {\n\t\t\t\t\tcode: 'ERR_STREAM_PREMATURE_CLOSE'\n\t\t\t\t});\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\t/** @param {Buffer} buf */\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = buffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tbuffer__WEBPACK_IMPORTED_MODULE_6__.Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\tconst removeSocketListeners = () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t}\n\n\t\trequest.on('close', removeSocketListeners);\n\t\trequest.on('abort', removeSocketListeners);\n\t});\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/headers.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/headers.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Headers),\n/* harmony export */   fromRawHeaders: () => (/* binding */ fromRawHeaders)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\n\n\n\n\nconst validators = /** @type {{validateHeaderName?:(name:string) => any, validateHeaderValue?:(name:string, value:string) => any}} */\n(http__WEBPACK_IMPORTED_MODULE_1__)\n\nconst validateHeaderName = typeof validators.validateHeaderName === 'function' ?\n\tvalidators.validateHeaderName :\n\t/**\n\t * @param {string} name \n\t */\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst err = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof validators.validateHeaderValue === 'function' ?\n\tvalidators.validateHeaderValue :\n\t/**\n\t * @param {string} name \n\t * @param {string} value \n\t */\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst err = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n * @implements {globalThis.Headers}\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\n\t\t\t// No op\n\t\t} else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIterable)(init)) {\n\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\tresult = [...init]\n\t\t\t\t.map(pair => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof pair !== 'object' || util__WEBPACK_IMPORTED_MODULE_0__.types.isBoxedPrimitive(pair)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t}).map(pair => {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [...pair];\n\t\t\t\t});\n\t\t} else if (typeof init === \"object\" && init !== null) {\n\t\t\t// Record<ByteString, ByteString>\n\t\t\tresult.push(...Object.entries(init));\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\t[];\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t * @param {string} value\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * @param {string} name\n\t\t\t\t\t\t */\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\t/**\n\t * \n\t * @param {string} name \n\t */\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @param {(value: string, key: string, parent: this) => void} callback \n\t * @param {any} thisArg \n\t * @returns {void}\n\t */\n\tforEach(callback, thisArg = undefined) {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tReflect.apply(callback, thisArg, [cookies.shift(), name, this])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<string>}\n\t */\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield /** @type {string} */(cookies.shift());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield /** @type {string} */(this.get(name));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @returns {IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tif (name.toLowerCase() === 'set-cookie') {\n\t\t\t\tlet cookies = this.getAll(name);\n\t\t\t\twhile (cookies.length > 0) {\n\t\t\t\t\tyield [name, /** @type {string} */(cookies.shift())];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tyield [name, /** @type {string} */(this.get(name))];\n\t\t\t}\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string[]>} */({}));\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, /** @type {Record<string, string|string[]>} */({}));\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, /** @type {Record<string, {enumerable:true}>} */ ({}))\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, /** @type {string[][]} */([]))\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/lib.node.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/lib.node.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_2__.File),\n/* harmony export */   FormData: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_1__.FormData),\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.ReadableStream),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   Response: () => (/* binding */ Response),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/fetch.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/request.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fetch.js */ \"(ssr)/./node_modules/@web-std/fetch/src/response.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/lib.node.js\");\n\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\nconst fetch = /** @type {typeof globalThis.fetch} */\n  (typeof globalThis.fetch === \"function\" ? globalThis.fetch.bind(globalThis) : _fetch_js__WEBPACK_IMPORTED_MODULE_3__.fetch)\n\nconst Headers = globalThis.Headers || _fetch_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\nconst Request = globalThis.Request || _fetch_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\nconst Response = globalThis.Response || _fetch_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetch);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL2xpYi5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUg7O0FBRWhEO0FBQ3JFO0FBQ0E7O0FBRUE7QUFDTyx5QkFBeUIseUJBQXlCO0FBQ3pELGdGQUFnRiw0Q0FBUTs7QUFFakYsc0NBQXNDLGlEQUFVO0FBQ2hELHNDQUFzQyxpREFBVTtBQUNoRCx3Q0FBd0MsaURBQVc7O0FBRTFELGlFQUFlLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kLW1hbmRhdGVzLy4vbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9saWIubm9kZS5qcz9iMjBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZldGNoIGFzIHdlYkZldGNoLCBIZWFkZXJzIGFzIFdlYkhlYWRlcnMsIFJlcXVlc3QgYXMgV2ViUmVxdWVzdCwgUmVzcG9uc2UgYXMgV2ViUmVzcG9uc2UgfSBmcm9tIFwiLi9mZXRjaC5qc1wiXG5cbmV4cG9ydCB7IFJlYWRhYmxlU3RyZWFtLCBCbG9iLCBGb3JtRGF0YSwgRmlsZSAgfSBmcm9tICcuL3BhY2thZ2UuanMnO1xuLy8gRWxlY3Ryb24tcmVuZGVyZXIgc2hvdWxkIGdldCB0aGUgYnJvd3NlciBpbXBsZW1lbnRhdGlvbiBpbnN0ZWFkIG9mIG5vZGVcbi8vIEJyb3dzZXIgY29uZmlndXJhdGlvbiBpcyBub3QgZW5vdWdoXG5cbi8vIE1hcmtpbmcgZXhwb3J0IGFzIGEgRE9NIEZpbGUgb2JqZWN0IGluc3RlYWQgb2YgY3VzdG9tIGNsYXNzLlxuZXhwb3J0IGNvbnN0IGZldGNoID0gLyoqIEB0eXBlIHt0eXBlb2YgZ2xvYmFsVGhpcy5mZXRjaH0gKi9cbiAgKHR5cGVvZiBnbG9iYWxUaGlzLmZldGNoID09PSBcImZ1bmN0aW9uXCIgPyBnbG9iYWxUaGlzLmZldGNoLmJpbmQoZ2xvYmFsVGhpcykgOiB3ZWJGZXRjaClcblxuZXhwb3J0IGNvbnN0IEhlYWRlcnMgPSBnbG9iYWxUaGlzLkhlYWRlcnMgfHwgV2ViSGVhZGVyc1xuZXhwb3J0IGNvbnN0IFJlcXVlc3QgPSBnbG9iYWxUaGlzLlJlcXVlc3QgfHwgV2ViUmVxdWVzdFxuZXhwb3J0IGNvbnN0IFJlc3BvbnNlID0gZ2xvYmFsVGhpcy5SZXNwb25zZSB8fCBXZWJSZXNwb25zZVxuXG5leHBvcnQgZGVmYXVsdCBmZXRjaFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/request.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/request.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Request),\n/* harmony export */   getNodeRequestOptions: () => (/* binding */ getNodeRequestOptions)\n/* harmony export */ });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var abort_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! abort-controller */ \"(ssr)/./node_modules/abort-controller/dist/abort-controller.js\");\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n/* harmony import */ var _utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/get-search.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js\");\n\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\n\n\n\n\n\n\n\nconst INTERNALS = Symbol('Request internals');\n\nconst forbiddenMethods = new Set([\"CONNECT\", \"TRACE\", \"TRACK\"]);\nconst normalizedMethods = new Set([\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"POST\", \"PUT\"]);\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {any} object\n * @return {object is Request}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n\n/**\n * Request class\n * @implements {globalThis.Request}\n *\n * @typedef {Object} RequestState\n * @property {string} method\n * @property {RequestRedirect} redirect\n * @property {globalThis.Headers} headers\n * @property {RequestCredentials} credentials\n * @property {URL} parsedURL\n * @property {AbortSignal|null} signal\n *\n * @typedef {Object} RequestExtraOptions\n * @property {number} [follow]\n * @property {boolean} [compress]\n * @property {number} [size]\n * @property {number} [counter]\n * @property {Agent} [agent]\n * @property {number} [highWaterMark]\n * @property {boolean} [insecureHTTPParser]\n *\n * @typedef {((url:URL) => import('http').Agent | import('https').Agent) | import('http').Agent | import('https').Agent} Agent\n *\n * @typedef {Object} RequestOptions\n * @property {string} [method]\n * @property {ReadableStream<Uint8Array>|null} [body]\n * @property {globalThis.Headers} [headers]\n * @property {RequestRedirect} [redirect]\n *\n */\nclass Request extends _body_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n\t/**\n\t * @param {string|Request|URL} info  Url or Request instance\n\t * @param {RequestInit & RequestExtraOptions} init   Custom options\n\t */\n\tconstructor(info, init = {}) {\n\t\tlet parsedURL;\n\t\t/** @type {RequestOptions & RequestExtraOptions} */\n\t\tlet settings\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(info)) {\n\t\t\tparsedURL = new URL(info.url);\n\t\t\tsettings = (info)\n\t\t} else {\n\t\t\tparsedURL = new URL(info);\n\t\t\tsettings = {};\n\t\t}\n\n\n\n\t\t// Normalize method: https://fetch.spec.whatwg.org/#methods\n\t\tlet method = init.method || settings.method || 'GET';\n\t\tif (forbiddenMethods.has(method.toUpperCase())) {\n\t\t\tthrow new TypeError(`Failed to construct 'Request': '${method}' HTTP method is unsupported.`)\n\t\t} else if (normalizedMethods.has(method.toUpperCase())) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tconst inputBody = init.body != null\n\t\t\t? init.body\n\t\t\t: (isRequest(info) && info.body !== null)\n\t\t\t? (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.clone)(info)\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (inputBody != null && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || settings.size || 0\n\t\t});\n\t\tconst input = settings\n\n\n\t\tconst headers = /** @type {globalThis.Headers} */\n\t\t\t(new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](init.headers || input.headers || {}));\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = 'signal' in init\n\t\t\t? init.signal\n\t\t\t: isRequest(input)\n\t\t\t? input.signal\n\t\t\t: null;\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isAbortSignal)(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\t\t\n\t\tif (!signal) {\n\t\t\tlet AbortControllerConstructor = typeof AbortController != \"undefined\"\n\t\t\t? AbortController\n\t\t\t: abort_controller__WEBPACK_IMPORTED_MODULE_1__.AbortController;\n\t\t\t/** @type {any} */\n\t\t\tlet newSignal = new AbortControllerConstructor().signal;\n\t\t\tsignal = newSignal;\n\t\t}\n\n\t\t/** @type {RequestState} */\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tcredentials: init.credentials || 'same-origin',\n\t\t\tparsedURL,\n\t\t\tsignal: signal || null\n\t\t};\n\n\t\t/** @type {boolean} */\n\t\tthis.keepalive\n\n\t\t// Node-fetch-only options\n\t\t/** @type {number} */\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\t/** @type {boolean} */\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\t/** @type {number} */\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\t/** @type {Agent|undefined} */\n\t\tthis.agent = init.agent || input.agent;\n\t\t/** @type {number} */\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\t/** @type {boolean} */\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\t/**\n\t * @type {RequestCache}\n\t */\n\tget cache() {\n\t\treturn \"default\"\n\t}\n\n\t/**\n\t * @type {RequestCredentials}\n\t */\n\n\tget credentials() {\n\t\treturn this[INTERNALS].credentials\n\t}\n\n\t/**\n\t * @type {RequestDestination}\n\t */\n\tget destination() {\n\t\treturn \"\"\n\t}\n\n\tget integrity() {\n\t\treturn \"\"\n\t}\n\n\t/** @type {RequestMode} */\n\tget mode() {\n\t\treturn \"cors\"\n\t}\n\n\t/** @type {string} */\n\tget referrer() {\n\t\treturn  \"\"\n\t}\n\n\t/** @type {ReferrerPolicy} */\n\tget referrerPolicy() {\n\t\treturn \"\"\n\t}\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/**\n\t * @type {string}\n\t */\n\tget url() {\n\t\treturn (0,url__WEBPACK_IMPORTED_MODULE_0__.format)(this[INTERNALS].parsedURL);\n\t}\n\n\t/**\n\t * @type {globalThis.Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/**\n\t * @returns {AbortSignal}\n\t */\n\tget signal() {\n\t\t// @ts-ignore\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  {globalThis.Request}\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n * The options object to be passed to http.request\n *\n * @param {Request & Record<INTERNALS, RequestState>} request -  A Request instance\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = (0,_body_js__WEBPACK_IMPORTED_MODULE_2__.getTotalBytes)(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = (0,_utils_get_search_js__WEBPACK_IMPORTED_MODULE_5__.getSearch)(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\t// @ts-ignore - it does not has a query\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\t// @ts-ignore - not sure what this supposed to do\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/response.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/response.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Response)\n/* harmony export */ });\n/* harmony import */ var _headers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./headers.js */ \"(ssr)/./node_modules/@web-std/fetch/src/headers.js\");\n/* harmony import */ var _body_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./body.js */ \"(ssr)/./node_modules/@web-std/fetch/src/body.js\");\n/* harmony import */ var _utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is-redirect.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\");\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\n\n\n\n\nconst INTERNALS = Symbol('Response internals');\n\n/**\n * Response class\n * \n * @typedef {Object} Ext\n * @property {number} [size]\n * @property {string} [url]\n * @property {number} [counter]\n * @property {number} [highWaterMark]\n * \n * @implements {globalThis.Response}\n */\nclass Response extends _body_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\t/**\n\t * @param {BodyInit|import('stream').Stream|null} [body] - Readable stream\n\t * @param {ResponseInit & Ext} [options] - Response options\n\t */\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\tconst status = options.status || 200;\n\t\tconst headers = new _headers_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = (0,_body_js__WEBPACK_IMPORTED_MODULE_0__.extractContentType)(this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @private\n\t\t*/\n\t\tthis[INTERNALS] = {\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter || 0,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\t/**\n\t * @type {ResponseType}\n\t */\n\tget type() {\n\t\treturn \"default\"\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS].statusText;\n\t}\n\n\t/**\n\t * @type {Headers}\n\t */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @returns {Response}\n\t */\n\tclone() {\n\t\treturn new Response((0,_body_js__WEBPACK_IMPORTED_MODULE_0__.clone)(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!(0,_utils_is_redirect_js__WEBPACK_IMPORTED_MODULE_2__.isRedirect)(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVtQztBQUN1QjtBQUNSOztBQUVsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ2UsdUJBQXVCLGdEQUFJO0FBQzFDO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQSxzQ0FBc0M7QUFDdEM7O0FBRUE7QUFDQSxzQkFBc0IsbURBQU87O0FBRTdCO0FBQ0EsdUJBQXVCLDREQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxzQkFBc0IsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsY0FBYyxhQUFhO0FBQzNCO0FBQ0E7QUFDQSxPQUFPLGlFQUFVO0FBQ2pCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTyxpQkFBaUI7QUFDeEIsVUFBVSxpQkFBaUI7QUFDM0IsTUFBTSxpQkFBaUI7QUFDdkIsY0FBYyxpQkFBaUI7QUFDL0IsY0FBYyxpQkFBaUI7QUFDL0IsV0FBVyxpQkFBaUI7QUFDNUIsU0FBUztBQUNULENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kLW1hbmRhdGVzLy4vbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy9yZXNwb25zZS5qcz81YTg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVzcG9uc2UuanNcbiAqXG4gKiBSZXNwb25zZSBjbGFzcyBwcm92aWRlcyBjb250ZW50IGRlY29kaW5nXG4gKi9cblxuaW1wb3J0IEhlYWRlcnMgZnJvbSAnLi9oZWFkZXJzLmpzJztcbmltcG9ydCBCb2R5LCB7Y2xvbmUsIGV4dHJhY3RDb250ZW50VHlwZX0gZnJvbSAnLi9ib2R5LmpzJztcbmltcG9ydCB7aXNSZWRpcmVjdH0gZnJvbSAnLi91dGlscy9pcy1yZWRpcmVjdC5qcyc7XG5cbmNvbnN0IElOVEVSTkFMUyA9IFN5bWJvbCgnUmVzcG9uc2UgaW50ZXJuYWxzJyk7XG5cbi8qKlxuICogUmVzcG9uc2UgY2xhc3NcbiAqIFxuICogQHR5cGVkZWYge09iamVjdH0gRXh0XG4gKiBAcHJvcGVydHkge251bWJlcn0gW3NpemVdXG4gKiBAcHJvcGVydHkge3N0cmluZ30gW3VybF1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbY291bnRlcl1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSBbaGlnaFdhdGVyTWFya11cbiAqIFxuICogQGltcGxlbWVudHMge2dsb2JhbFRoaXMuUmVzcG9uc2V9XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgQm9keSB7XG5cdC8qKlxuXHQgKiBAcGFyYW0ge0JvZHlJbml0fGltcG9ydCgnc3RyZWFtJykuU3RyZWFtfG51bGx9IFtib2R5XSAtIFJlYWRhYmxlIHN0cmVhbVxuXHQgKiBAcGFyYW0ge1Jlc3BvbnNlSW5pdCAmIEV4dH0gW29wdGlvbnNdIC0gUmVzcG9uc2Ugb3B0aW9uc1xuXHQgKi9cblx0Y29uc3RydWN0b3IoYm9keSA9IG51bGwsIG9wdGlvbnMgPSB7fSkge1xuXHRcdHN1cGVyKGJvZHksIG9wdGlvbnMpO1xuXG5cdFx0Y29uc3Qgc3RhdHVzID0gb3B0aW9ucy5zdGF0dXMgfHwgMjAwO1xuXHRcdGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyhvcHRpb25zLmhlYWRlcnMpO1xuXG5cdFx0aWYgKGJvZHkgIT09IG51bGwgJiYgIWhlYWRlcnMuaGFzKCdDb250ZW50LVR5cGUnKSkge1xuXHRcdFx0Y29uc3QgY29udGVudFR5cGUgPSBleHRyYWN0Q29udGVudFR5cGUodGhpcyk7XG5cdFx0XHRpZiAoY29udGVudFR5cGUpIHtcblx0XHRcdFx0aGVhZGVycy5hcHBlbmQoJ0NvbnRlbnQtVHlwZScsIGNvbnRlbnRUeXBlKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvKipcblx0XHQgKiBAcHJpdmF0ZVxuXHRcdCovXG5cdFx0dGhpc1tJTlRFUk5BTFNdID0ge1xuXHRcdFx0dXJsOiBvcHRpb25zLnVybCxcblx0XHRcdHN0YXR1cyxcblx0XHRcdHN0YXR1c1RleHQ6IG9wdGlvbnMuc3RhdHVzVGV4dCB8fCAnJyxcblx0XHRcdGhlYWRlcnMsXG5cdFx0XHRjb3VudGVyOiBvcHRpb25zLmNvdW50ZXIgfHwgMCxcblx0XHRcdGhpZ2hXYXRlck1hcms6IG9wdGlvbnMuaGlnaFdhdGVyTWFya1xuXHRcdH07XG5cdH1cblxuXHQvKipcblx0ICogQHR5cGUge1Jlc3BvbnNlVHlwZX1cblx0ICovXG5cdGdldCB0eXBlKCkge1xuXHRcdHJldHVybiBcImRlZmF1bHRcIlxuXHR9XG5cblx0Z2V0IHVybCgpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybCB8fCAnJztcblx0fVxuXG5cdGdldCBzdGF0dXMoKSB7XG5cdFx0cmV0dXJuIHRoaXNbSU5URVJOQUxTXS5zdGF0dXM7XG5cdH1cblxuXHQvKipcblx0ICogQ29udmVuaWVuY2UgcHJvcGVydHkgcmVwcmVzZW50aW5nIGlmIHRoZSByZXF1ZXN0IGVuZGVkIG5vcm1hbGx5XG5cdCAqL1xuXHRnZXQgb2soKSB7XG5cdFx0cmV0dXJuIHRoaXNbSU5URVJOQUxTXS5zdGF0dXMgPj0gMjAwICYmIHRoaXNbSU5URVJOQUxTXS5zdGF0dXMgPCAzMDA7XG5cdH1cblxuXHRnZXQgcmVkaXJlY3RlZCgpIHtcblx0XHRyZXR1cm4gdGhpc1tJTlRFUk5BTFNdLmNvdW50ZXIgPiAwO1xuXHR9XG5cblx0Z2V0IHN0YXR1c1RleHQoKSB7XG5cdFx0cmV0dXJuIHRoaXNbSU5URVJOQUxTXS5zdGF0dXNUZXh0O1xuXHR9XG5cblx0LyoqXG5cdCAqIEB0eXBlIHtIZWFkZXJzfVxuXHQgKi9cblx0Z2V0IGhlYWRlcnMoKSB7XG5cdFx0cmV0dXJuIHRoaXNbSU5URVJOQUxTXS5oZWFkZXJzO1xuXHR9XG5cblx0Z2V0IGhpZ2hXYXRlck1hcmsoKSB7XG5cdFx0cmV0dXJuIHRoaXNbSU5URVJOQUxTXS5oaWdoV2F0ZXJNYXJrO1xuXHR9XG5cblx0LyoqXG5cdCAqIENsb25lIHRoaXMgcmVzcG9uc2Vcblx0ICpcblx0ICogQHJldHVybnMge1Jlc3BvbnNlfVxuXHQgKi9cblx0Y2xvbmUoKSB7XG5cdFx0cmV0dXJuIG5ldyBSZXNwb25zZShjbG9uZSh0aGlzKSwge1xuXHRcdFx0dXJsOiB0aGlzLnVybCxcblx0XHRcdHN0YXR1czogdGhpcy5zdGF0dXMsXG5cdFx0XHRzdGF0dXNUZXh0OiB0aGlzLnN0YXR1c1RleHQsXG5cdFx0XHRoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG5cdFx0XHRzaXplOiB0aGlzLnNpemVcblx0XHR9KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge3N0cmluZ30gdXJsICAgIFRoZSBVUkwgdGhhdCB0aGUgbmV3IHJlc3BvbnNlIGlzIHRvIG9yaWdpbmF0ZSBmcm9tLlxuXHQgKiBAcGFyYW0ge251bWJlcn0gc3RhdHVzIEFuIG9wdGlvbmFsIHN0YXR1cyBjb2RlIGZvciB0aGUgcmVzcG9uc2UgKGUuZy4sIDMwMi4pXG5cdCAqIEByZXR1cm5zIHtSZXNwb25zZX0gICAgQSBSZXNwb25zZSBvYmplY3QuXG5cdCAqL1xuXHRzdGF0aWMgcmVkaXJlY3QodXJsLCBzdGF0dXMgPSAzMDIpIHtcblx0XHRpZiAoIWlzUmVkaXJlY3Qoc3RhdHVzKSkge1xuXHRcdFx0dGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ZhaWxlZCB0byBleGVjdXRlIFwicmVkaXJlY3RcIiBvbiBcInJlc3BvbnNlXCI6IEludmFsaWQgc3RhdHVzIGNvZGUnKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtcblx0XHRcdGhlYWRlcnM6IHtcblx0XHRcdFx0bG9jYXRpb246IG5ldyBVUkwodXJsKS50b1N0cmluZygpXG5cdFx0XHR9LFxuXHRcdFx0c3RhdHVzXG5cdFx0fSk7XG5cdH1cblxuXHRnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG5cdFx0cmV0dXJuICdSZXNwb25zZSc7XG5cdH1cbn1cblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoUmVzcG9uc2UucHJvdG90eXBlLCB7XG5cdHVybDoge2VudW1lcmFibGU6IHRydWV9LFxuXHRzdGF0dXM6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0b2s6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0cmVkaXJlY3RlZDoge2VudW1lcmFibGU6IHRydWV9LFxuXHRzdGF0dXNUZXh0OiB7ZW51bWVyYWJsZTogdHJ1ZX0sXG5cdGhlYWRlcnM6IHtlbnVtZXJhYmxlOiB0cnVlfSxcblx0Y2xvbmU6IHtlbnVtZXJhYmxlOiB0cnVlfVxufSk7XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/response.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js":
/*!************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/form-data.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataIterator: () => (/* binding */ formDataIterator),\n/* harmony export */   getBoundary: () => (/* binding */ getBoundary),\n/* harmony export */   getFormDataLength: () => (/* binding */ getFormDataLength),\n/* harmony export */   toFormData: () => (/* binding */ toFormData)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-storage/multipart-parser */ \"(ssr)/./node_modules/@web3-storage/multipart-parser/esm/src/index.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../package.js */ \"(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\");\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../package.js */ \"(ssr)/./node_modules/@web-std/file/src/lib.node.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is.js */ \"(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\");\n\n\n\n\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(field)) {\n\t\tconst { name = 'blob', type } = /** @type {Blob & {name?:string}} */ (field);\n\t\theader += `; filename=\"${name}\"${carriage}`;\n\t\theader += `Content-Type: ${type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nconst getBoundary = () => (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nasync function * formDataIterator(form, boundary) {\n\tconst encoder = new TextEncoder();\n\tfor (const [name, value] of form) {\n\t\tyield encoder.encode(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\t// @ts-ignore - we know our streams implement aysnc iteration\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield encoder.encode(value);\n\t\t}\n\n\t\tyield encoder.encode(carriage);\n\t}\n\n\tyield encoder.encode(getFooter(boundary));\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nfunction getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tif ((0,_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(value)) {\n\t\t\tlength += value.size;\n\t\t} else {\n\t\t\tlength += Buffer.byteLength(String(value));\n\t\t}\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n\n/**\n * @param {Body & {headers?:Headers}} source\n */\nconst toFormData = async (source) => {\n  let { body, headers } = source;\n  const contentType = headers?.get('Content-Type') || ''\n\n  if (contentType.startsWith('application/x-www-form-urlencoded') && body != null) {\n\tconst form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData();\n\tlet bodyText = await source.text();\n\tnew URLSearchParams(bodyText).forEach((v, k) => form.append(k, v));\n\treturn form;\n  }\n\n  const [type, boundary] = contentType.split(/\\s*;\\s*boundary=/)\n  if (type === 'multipart/form-data' && boundary != null && body != null) {\n    const form = new _package_js__WEBPACK_IMPORTED_MODULE_3__.FormData()\n    const parts = (0,_web3_storage_multipart_parser__WEBPACK_IMPORTED_MODULE_1__.iterateMultipart)(body, boundary)\n    for await (const { name, data, filename, contentType } of parts) {\n      if (typeof filename === 'string') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([data], filename, { type: contentType }))\n      } else if (typeof filename !== 'undefined') {\n        form.append(name, new _package_js__WEBPACK_IMPORTED_MODULE_4__.File([], '', { type: contentType }))\n      } else {\n        form.append(name, new TextDecoder().decode(data), filename)\n      }\n    }\n    return form\n  } else {\n    throw new TypeError('Could not parse content as FormData.')\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2Zvcm0tZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBbUM7QUFDK0I7QUFDbkI7QUFDZDs7QUFFakM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsaUNBQWlDLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLG1CQUFtQjs7QUFFakY7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsR0FBRztBQUNkO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUztBQUMzQyw0Q0FBNEMsUUFBUSxLQUFLOztBQUV6RCxLQUFLLDhDQUFNO0FBQ1gsVUFBVSxzQkFBc0IsYUFBYSxRQUFRLGVBQWU7QUFDcEUsZUFBZSxZQUFZLEtBQUssR0FBRyxTQUFTO0FBQzVDLDZCQUE2QixtQ0FBbUM7QUFDaEU7O0FBRUEsV0FBVyxPQUFPLEVBQUUsbUJBQW1CO0FBQ3ZDOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ08sMEJBQTBCLG1EQUFXOztBQUU1QztBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLDhDQUFNO0FBQ1o7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDTztBQUNQOztBQUVBO0FBQ0E7O0FBRUEsTUFBTSw4Q0FBTTtBQUNaO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxRQUFRLG1CQUFtQjtBQUN0QztBQUNPO0FBQ1AsUUFBUSxnQkFBZ0I7QUFDeEI7O0FBRUE7QUFDQSxrQkFBa0IsaURBQVE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0RBQWtEO0FBQ2xEO0FBQ0EscUJBQXFCLGlEQUFRO0FBQzdCLGtCQUFrQixnRkFBZ0I7QUFDbEMsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBLDhCQUE4Qiw2Q0FBSSxxQkFBcUIsbUJBQW1CO0FBQzFFLFFBQVE7QUFDUiw4QkFBOEIsNkNBQUksV0FBVyxtQkFBbUI7QUFDaEUsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2QtbWFuZGF0ZXMvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2Zvcm0tZGF0YS5qcz9iMDlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cmFuZG9tQnl0ZXN9IGZyb20gJ2NyeXB0byc7XG5pbXBvcnQgeyBpdGVyYXRlTXVsdGlwYXJ0IH0gZnJvbSAnQHdlYjMtc3RvcmFnZS9tdWx0aXBhcnQtcGFyc2VyJztcbmltcG9ydCB7IEZvcm1EYXRhLCBGaWxlIH0gZnJvbSAnLi4vcGFja2FnZS5qcyc7XG5pbXBvcnQgeyBpc0Jsb2IgfSBmcm9tICcuL2lzLmpzJztcblxuY29uc3QgY2FycmlhZ2UgPSAnXFxyXFxuJztcbmNvbnN0IGRhc2hlcyA9ICctJy5yZXBlYXQoMik7XG5jb25zdCBjYXJyaWFnZUxlbmd0aCA9IEJ1ZmZlci5ieXRlTGVuZ3RoKGNhcnJpYWdlKTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqL1xuY29uc3QgZ2V0Rm9vdGVyID0gYm91bmRhcnkgPT4gYCR7ZGFzaGVzfSR7Ym91bmRhcnl9JHtkYXNoZXN9JHtjYXJyaWFnZS5yZXBlYXQoMil9YDtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gYm91bmRhcnlcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0geyp9IGZpZWxkXG4gKlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBnZXRIZWFkZXIoYm91bmRhcnksIG5hbWUsIGZpZWxkKSB7XG5cdGxldCBoZWFkZXIgPSAnJztcblxuXHRoZWFkZXIgKz0gYCR7ZGFzaGVzfSR7Ym91bmRhcnl9JHtjYXJyaWFnZX1gO1xuXHRoZWFkZXIgKz0gYENvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT1cIiR7bmFtZX1cImA7XG5cblx0aWYgKGlzQmxvYihmaWVsZCkpIHtcblx0XHRjb25zdCB7IG5hbWUgPSAnYmxvYicsIHR5cGUgfSA9IC8qKiBAdHlwZSB7QmxvYiAmIHtuYW1lPzpzdHJpbmd9fSAqLyAoZmllbGQpO1xuXHRcdGhlYWRlciArPSBgOyBmaWxlbmFtZT1cIiR7bmFtZX1cIiR7Y2FycmlhZ2V9YDtcblx0XHRoZWFkZXIgKz0gYENvbnRlbnQtVHlwZTogJHt0eXBlIHx8ICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nfWA7XG5cdH1cblxuXHRyZXR1cm4gYCR7aGVhZGVyfSR7Y2FycmlhZ2UucmVwZWF0KDIpfWA7XG59XG5cbi8qKlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgZ2V0Qm91bmRhcnkgPSAoKSA9PiByYW5kb21CeXRlcyg4KS50b1N0cmluZygnaGV4Jyk7XG5cbi8qKlxuICogQHBhcmFtIHtGb3JtRGF0YX0gZm9ybVxuICogQHBhcmFtIHtzdHJpbmd9IGJvdW5kYXJ5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiAqIGZvcm1EYXRhSXRlcmF0b3IoZm9ybSwgYm91bmRhcnkpIHtcblx0Y29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuXHRmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgZm9ybSkge1xuXHRcdHlpZWxkIGVuY29kZXIuZW5jb2RlKGdldEhlYWRlcihib3VuZGFyeSwgbmFtZSwgdmFsdWUpKTtcblxuXHRcdGlmIChpc0Jsb2IodmFsdWUpKSB7XG5cdFx0XHQvLyBAdHMtaWdub3JlIC0gd2Uga25vdyBvdXIgc3RyZWFtcyBpbXBsZW1lbnQgYXlzbmMgaXRlcmF0aW9uXG5cdFx0XHR5aWVsZCAqIHZhbHVlLnN0cmVhbSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR5aWVsZCBlbmNvZGVyLmVuY29kZSh2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0eWllbGQgZW5jb2Rlci5lbmNvZGUoY2FycmlhZ2UpO1xuXHR9XG5cblx0eWllbGQgZW5jb2Rlci5lbmNvZGUoZ2V0Rm9vdGVyKGJvdW5kYXJ5KSk7XG59XG5cbi8qKlxuICogQHBhcmFtIHtGb3JtRGF0YX0gZm9ybVxuICogQHBhcmFtIHtzdHJpbmd9IGJvdW5kYXJ5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRGb3JtRGF0YUxlbmd0aChmb3JtLCBib3VuZGFyeSkge1xuXHRsZXQgbGVuZ3RoID0gMDtcblxuXHRmb3IgKGNvbnN0IFtuYW1lLCB2YWx1ZV0gb2YgZm9ybSkge1xuXHRcdGxlbmd0aCArPSBCdWZmZXIuYnl0ZUxlbmd0aChnZXRIZWFkZXIoYm91bmRhcnksIG5hbWUsIHZhbHVlKSk7XG5cblx0XHRpZiAoaXNCbG9iKHZhbHVlKSkge1xuXHRcdFx0bGVuZ3RoICs9IHZhbHVlLnNpemU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGxlbmd0aCArPSBCdWZmZXIuYnl0ZUxlbmd0aChTdHJpbmcodmFsdWUpKTtcblx0XHR9XG5cblx0XHRsZW5ndGggKz0gY2FycmlhZ2VMZW5ndGg7XG5cdH1cblxuXHRsZW5ndGggKz0gQnVmZmVyLmJ5dGVMZW5ndGgoZ2V0Rm9vdGVyKGJvdW5kYXJ5KSk7XG5cblx0cmV0dXJuIGxlbmd0aDtcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0JvZHkgJiB7aGVhZGVycz86SGVhZGVyc319IHNvdXJjZVxuICovXG5leHBvcnQgY29uc3QgdG9Gb3JtRGF0YSA9IGFzeW5jIChzb3VyY2UpID0+IHtcbiAgbGV0IHsgYm9keSwgaGVhZGVycyB9ID0gc291cmNlO1xuICBjb25zdCBjb250ZW50VHlwZSA9IGhlYWRlcnM/LmdldCgnQ29udGVudC1UeXBlJykgfHwgJydcblxuICBpZiAoY29udGVudFR5cGUuc3RhcnRzV2l0aCgnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJykgJiYgYm9keSAhPSBudWxsKSB7XG5cdGNvbnN0IGZvcm0gPSBuZXcgRm9ybURhdGEoKTtcblx0bGV0IGJvZHlUZXh0ID0gYXdhaXQgc291cmNlLnRleHQoKTtcblx0bmV3IFVSTFNlYXJjaFBhcmFtcyhib2R5VGV4dCkuZm9yRWFjaCgodiwgaykgPT4gZm9ybS5hcHBlbmQoaywgdikpO1xuXHRyZXR1cm4gZm9ybTtcbiAgfVxuXG4gIGNvbnN0IFt0eXBlLCBib3VuZGFyeV0gPSBjb250ZW50VHlwZS5zcGxpdCgvXFxzKjtcXHMqYm91bmRhcnk9LylcbiAgaWYgKHR5cGUgPT09ICdtdWx0aXBhcnQvZm9ybS1kYXRhJyAmJiBib3VuZGFyeSAhPSBudWxsICYmIGJvZHkgIT0gbnVsbCkge1xuICAgIGNvbnN0IGZvcm0gPSBuZXcgRm9ybURhdGEoKVxuICAgIGNvbnN0IHBhcnRzID0gaXRlcmF0ZU11bHRpcGFydChib2R5LCBib3VuZGFyeSlcbiAgICBmb3IgYXdhaXQgKGNvbnN0IHsgbmFtZSwgZGF0YSwgZmlsZW5hbWUsIGNvbnRlbnRUeXBlIH0gb2YgcGFydHMpIHtcbiAgICAgIGlmICh0eXBlb2YgZmlsZW5hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGZvcm0uYXBwZW5kKG5hbWUsIG5ldyBGaWxlKFtkYXRhXSwgZmlsZW5hbWUsIHsgdHlwZTogY29udGVudFR5cGUgfSkpXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBmaWxlbmFtZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgZm9ybS5hcHBlbmQobmFtZSwgbmV3IEZpbGUoW10sICcnLCB7IHR5cGU6IGNvbnRlbnRUeXBlIH0pKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9ybS5hcHBlbmQobmFtZSwgbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGRhdGEpLCBmaWxlbmFtZSlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvcm1cbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDb3VsZCBub3QgcGFyc2UgY29udGVudCBhcyBGb3JtRGF0YS4nKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/form-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js":
/*!*************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/get-search.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSearch: () => (/* binding */ getSearch)\n/* harmony export */ });\n/**\n * @param {URL} parsedURL \n * @returns {string}\n */\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2dldC1zZWFyY2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvZ2V0LXNlYXJjaC5qcz8xZmZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhcmFtIHtVUkx9IHBhcnNlZFVSTCBcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRTZWFyY2ggPSBwYXJzZWRVUkwgPT4ge1xuXHRpZiAocGFyc2VkVVJMLnNlYXJjaCkge1xuXHRcdHJldHVybiBwYXJzZWRVUkwuc2VhcmNoO1xuXHR9XG5cblx0Y29uc3QgbGFzdE9mZnNldCA9IHBhcnNlZFVSTC5ocmVmLmxlbmd0aCAtIDE7XG5cdGNvbnN0IGhhc2ggPSBwYXJzZWRVUkwuaGFzaCB8fCAocGFyc2VkVVJMLmhyZWZbbGFzdE9mZnNldF0gPT09ICcjJyA/ICcjJyA6ICcnKTtcblx0cmV0dXJuIHBhcnNlZFVSTC5ocmVmW2xhc3RPZmZzZXQgLSBoYXNoLmxlbmd0aF0gPT09ICc/JyA/ICc/JyA6ICcnO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/get-search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is-redirect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isRedirect: () => (/* binding */ isRedirect)\n/* harmony export */ });\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLXJlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9mZXRjaC9zcmMvdXRpbHMvaXMtcmVkaXJlY3QuanM/YzQ3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZWRpcmVjdFN0YXR1cyA9IG5ldyBTZXQoWzMwMSwgMzAyLCAzMDMsIDMwNywgMzA4XSk7XG5cbi8qKlxuICogUmVkaXJlY3QgY29kZSBtYXRjaGluZ1xuICpcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb2RlIC0gU3RhdHVzIGNvZGVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCBpc1JlZGlyZWN0ID0gY29kZSA9PiB7XG5cdHJldHVybiByZWRpcmVjdFN0YXR1cy5oYXMoY29kZSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/is-redirect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/is.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/is.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbortSignal: () => (/* binding */ isAbortSignal),\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isFormData: () => (/* binding */ isFormData),\n/* harmony export */   isIterable: () => (/* binding */ isIterable),\n/* harmony export */   isMultipartFormDataStream: () => (/* binding */ isMultipartFormDataStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isURLSearchParameters: () => (/* binding */ isURLSearchParameters)\n/* harmony export */ });\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {any} object\n * @return {obj is URLSearchParams}\n */\nconst isURLSearchParameters = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.has === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.sort === \"function\" &&\n\t\tobject[NAME] === \"URLSearchParams\"\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} object\n * @return {object is Blob}\n */\nconst isBlob = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.arrayBuffer === \"function\" &&\n\t\ttypeof object.type === \"string\" &&\n\t\ttypeof object.stream === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {object is FormData}\n */\nfunction isFormData(object) {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\ttypeof object.append === \"function\" &&\n\t\ttypeof object.set === \"function\" &&\n\t\ttypeof object.get === \"function\" &&\n\t\ttypeof object.getAll === \"function\" &&\n\t\ttypeof object.delete === \"function\" &&\n\t\ttypeof object.keys === \"function\" &&\n\t\ttypeof object.values === \"function\" &&\n\t\ttypeof object.entries === \"function\" &&\n\t\ttypeof object.constructor === \"function\" &&\n\t\tobject[NAME] === \"FormData\"\n\t);\n}\n\n/**\n * Detect form data input from form-data module\n *\n * @param {any} value\n * @returns {value is Stream & {getBoundary():string, hasKnownLength():boolean, getLengthSync():number|null}}\n */\nconst isMultipartFormDataStream = (value) => {\n\treturn (\n\t\tvalue instanceof stream__WEBPACK_IMPORTED_MODULE_0__ === true &&\n\t\ttypeof value.getBoundary === \"function\" &&\n\t\ttypeof value.hasKnownLength === \"function\" &&\n\t\ttypeof value.getLengthSync === \"function\"\n\t);\n};\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {any} object\n * @return {obj is AbortSignal}\n */\nconst isAbortSignal = (object) => {\n\treturn (\n\t\ttypeof object === \"object\" &&\n\t\t(object[NAME] === \"AbortSignal\" || object[NAME] === \"EventTarget\")\n\t);\n};\n\n/**\n * Check if `value` is a ReadableStream.\n *\n * @param {*} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) => {\n\treturn (\n\t\ttypeof value === \"object\" &&\n\t\ttypeof value.getReader === \"function\" &&\n\t\ttypeof value.cancel === \"function\" &&\n\t\ttypeof value.tee === \"function\"\n\t);\n};\n\n/**\n *\n * @param {any} value\n * @returns {value is Iterable<unknown>}\n */\nconst isIterable = (value) => value && Symbol.iterator in value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL2lzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTRCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksR0FBRztBQUNmLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYSxtQkFBbUI7QUFDaEM7QUFDTztBQUNQO0FBQ0EsbUJBQW1CLG1DQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCLFlBQVk7QUFDWjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kLW1hbmRhdGVzLy4vbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy91dGlscy9pcy5qcz9mOTk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSBcInN0cmVhbVwiO1xuXG4vKipcbiAqIElzLmpzXG4gKlxuICogT2JqZWN0IHR5cGUgY2hlY2tzLlxuICovXG5cbmNvbnN0IE5BTUUgPSBTeW1ib2wudG9TdHJpbmdUYWc7XG5cbi8qKlxuICogQ2hlY2sgaWYgYG9iamAgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKiByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlLWZldGNoL25vZGUtZmV0Y2gvaXNzdWVzLzI5NiNpc3N1ZWNvbW1lbnQtMzA3NTk4MTQzXG4gKlxuICogQHBhcmFtICB7YW55fSBvYmplY3RcbiAqIEByZXR1cm4ge29iaiBpcyBVUkxTZWFyY2hQYXJhbXN9XG4gKi9cbmV4cG9ydCBjb25zdCBpc1VSTFNlYXJjaFBhcmFtZXRlcnMgPSAob2JqZWN0KSA9PiB7XG5cdHJldHVybiAoXG5cdFx0dHlwZW9mIG9iamVjdCA9PT0gXCJvYmplY3RcIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuYXBwZW5kID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmRlbGV0ZSA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5nZXQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZ2V0QWxsID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmhhcyA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5zZXQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3Quc29ydCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0b2JqZWN0W05BTUVdID09PSBcIlVSTFNlYXJjaFBhcmFtc1wiXG5cdCk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGBvYmplY3RgIGlzIGEgVzNDIGBCbG9iYCBvYmplY3QgKHdoaWNoIGBGaWxlYCBpbmhlcml0cyBmcm9tKVxuICpcbiAqIEBwYXJhbSAgeyp9IG9iamVjdFxuICogQHJldHVybiB7b2JqZWN0IGlzIEJsb2J9XG4gKi9cbmV4cG9ydCBjb25zdCBpc0Jsb2IgPSAob2JqZWN0KSA9PiB7XG5cdHJldHVybiAoXG5cdFx0dHlwZW9mIG9iamVjdCA9PT0gXCJvYmplY3RcIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuYXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QudHlwZSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdHR5cGVvZiBvYmplY3Quc3RyZWFtID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmNvbnN0cnVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHQvXihCbG9ifEZpbGUpJC8udGVzdChvYmplY3RbTkFNRV0pXG5cdCk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGEgc3BlYy1jb21wbGlhbnQgYEZvcm1EYXRhYCBvYmplY3RcbiAqXG4gKiBAcGFyYW0geyp9IG9iamVjdFxuICogQHJldHVybiB7b2JqZWN0IGlzIEZvcm1EYXRhfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGb3JtRGF0YShvYmplY3QpIHtcblx0cmV0dXJuIChcblx0XHR0eXBlb2Ygb2JqZWN0ID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5hcHBlbmQgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3Quc2V0ID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmdldCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIG9iamVjdC5nZXRBbGwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuZGVsZXRlID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmtleXMgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QudmFsdWVzID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2Ygb2JqZWN0LmVudHJpZXMgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdG9iamVjdFtOQU1FXSA9PT0gXCJGb3JtRGF0YVwiXG5cdCk7XG59XG5cbi8qKlxuICogRGV0ZWN0IGZvcm0gZGF0YSBpbnB1dCBmcm9tIGZvcm0tZGF0YSBtb2R1bGVcbiAqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBTdHJlYW0gJiB7Z2V0Qm91bmRhcnkoKTpzdHJpbmcsIGhhc0tub3duTGVuZ3RoKCk6Ym9vbGVhbiwgZ2V0TGVuZ3RoU3luYygpOm51bWJlcnxudWxsfX1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzTXVsdGlwYXJ0Rm9ybURhdGFTdHJlYW0gPSAodmFsdWUpID0+IHtcblx0cmV0dXJuIChcblx0XHR2YWx1ZSBpbnN0YW5jZW9mIFN0cmVhbSA9PT0gdHJ1ZSAmJlxuXHRcdHR5cGVvZiB2YWx1ZS5nZXRCb3VuZGFyeSA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIHZhbHVlLmhhc0tub3duTGVuZ3RoID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgdmFsdWUuZ2V0TGVuZ3RoU3luYyA9PT0gXCJmdW5jdGlvblwiXG5cdCk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGFuIGluc3RhbmNlIG9mIEFib3J0U2lnbmFsLlxuICpcbiAqIEBwYXJhbSAge2FueX0gb2JqZWN0XG4gKiBAcmV0dXJuIHtvYmogaXMgQWJvcnRTaWduYWx9XG4gKi9cbmV4cG9ydCBjb25zdCBpc0Fib3J0U2lnbmFsID0gKG9iamVjdCkgPT4ge1xuXHRyZXR1cm4gKFxuXHRcdHR5cGVvZiBvYmplY3QgPT09IFwib2JqZWN0XCIgJiZcblx0XHQob2JqZWN0W05BTUVdID09PSBcIkFib3J0U2lnbmFsXCIgfHwgb2JqZWN0W05BTUVdID09PSBcIkV2ZW50VGFyZ2V0XCIpXG5cdCk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGB2YWx1ZWAgaXMgYSBSZWFkYWJsZVN0cmVhbS5cbiAqXG4gKiBAcGFyYW0geyp9IHZhbHVlXG4gKiBAcmV0dXJucyB7dmFsdWUgaXMgUmVhZGFibGVTdHJlYW19XG4gKi9cbmV4cG9ydCBjb25zdCBpc1JlYWRhYmxlU3RyZWFtID0gKHZhbHVlKSA9PiB7XG5cdHJldHVybiAoXG5cdFx0dHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG5cdFx0dHlwZW9mIHZhbHVlLmdldFJlYWRlciA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIHZhbHVlLmNhbmNlbCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIHZhbHVlLnRlZSA9PT0gXCJmdW5jdGlvblwiXG5cdCk7XG59O1xuXG4vKipcbiAqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBJdGVyYWJsZTx1bmtub3duPn1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzSXRlcmFibGUgPSAodmFsdWUpID0+IHZhbHVlICYmIFN5bWJvbC5pdGVyYXRvciBpbiB2YWx1ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js":
/*!*******************************************************!*\
  !*** ./node_modules/@web-std/fetch/src/utils/utf8.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! util */ \"util\");\n\n\nconst encoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();\nconst decoder = new util__WEBPACK_IMPORTED_MODULE_0__.TextDecoder();\n\n/**\n * @param {string} text\n */\nconst encode = text => encoder.encode(text);\n\n/**\n * @param {Uint8Array} bytes\n */\nconst decode = bytes => decoder.decode(bytes);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmV0Y2gvc3JjL3V0aWxzL3V0ZjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDOztBQUU5QyxvQkFBb0IsNkNBQVc7QUFDL0Isb0JBQW9CLDZDQUFXOztBQUUvQjtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNPOztBQUVQO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kLW1hbmRhdGVzLy4vbm9kZV9tb2R1bGVzL0B3ZWItc3RkL2ZldGNoL3NyYy91dGlscy91dGY4LmpzPzkwYTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUZXh0RW5jb2RlciwgVGV4dERlY29kZXJ9IGZyb20gJ3V0aWwnO1xuXG5jb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5jb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHRcbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IHRleHQgPT4gZW5jb2Rlci5lbmNvZGUodGV4dCk7XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBieXRlc1xuICovXG5leHBvcnQgY29uc3QgZGVjb2RlID0gYnl0ZXMgPT4gZGVjb2Rlci5kZWNvZGUoYnl0ZXMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/fetch/src/utils/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/file.js":
/*!************************************************!*\
  !*** ./node_modules/@web-std/file/src/file.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/package.js\");\n\n\n/**\n * @implements {globalThis.File}\n */\nclass File extends _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob {\n  /**\n   *\n   * @param {BlobPart[]} init\n   * @param {string} name - A USVString representing the file name or the path\n   * to the file.\n   * @param {FilePropertyBag} [options]\n   */\n  constructor(\n    init,\n    name = panic(new TypeError(\"File constructor requires name argument\")),\n    options = {}\n  ) {\n    super(init, options)\n    // Per File API spec https://w3c.github.io/FileAPI/#file-constructor\n    // Every \"/\" character of file name must be replaced with a \":\".\n    /** @private */\n    this._name = name\n    // It appears that browser do not follow the spec here.\n    // String(name).replace(/\\//g, \":\")\n    /** @private */\n    this._lastModified = options.lastModified || Date.now()\n  }\n\n  /**\n   * The name of the file referenced by the File object.\n   * @type {string}\n   */\n  get name() {\n    return this._name\n  }\n\n  /**\n   * The path the URL of the File is relative to.\n   * @type {string}\n   */\n  get webkitRelativePath() {\n    return \"\"\n  }\n\n  /**\n   * Returns the last modified time of the file, in millisecond since the UNIX\n   * epoch (January 1st, 1970 at Midnight).\n   * @returns {number}\n   */\n  get lastModified() {\n    return this._lastModified\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvZmlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtQzs7QUFFbkM7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTyxtQkFBbUIsNkNBQUk7QUFDOUI7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QixhQUFhLFFBQVE7QUFDckI7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9maWxlL3NyYy9maWxlLmpzPzZiMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmxvYiB9IGZyb20gXCIuL3BhY2thZ2UuanNcIlxuXG4vKipcbiAqIEBpbXBsZW1lbnRzIHtnbG9iYWxUaGlzLkZpbGV9XG4gKi9cbmV4cG9ydCBjbGFzcyBGaWxlIGV4dGVuZHMgQmxvYiB7XG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0ge0Jsb2JQYXJ0W119IGluaXRcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBBIFVTVlN0cmluZyByZXByZXNlbnRpbmcgdGhlIGZpbGUgbmFtZSBvciB0aGUgcGF0aFxuICAgKiB0byB0aGUgZmlsZS5cbiAgICogQHBhcmFtIHtGaWxlUHJvcGVydHlCYWd9IFtvcHRpb25zXVxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgaW5pdCxcbiAgICBuYW1lID0gcGFuaWMobmV3IFR5cGVFcnJvcihcIkZpbGUgY29uc3RydWN0b3IgcmVxdWlyZXMgbmFtZSBhcmd1bWVudFwiKSksXG4gICAgb3B0aW9ucyA9IHt9XG4gICkge1xuICAgIHN1cGVyKGluaXQsIG9wdGlvbnMpXG4gICAgLy8gUGVyIEZpbGUgQVBJIHNwZWMgaHR0cHM6Ly93M2MuZ2l0aHViLmlvL0ZpbGVBUEkvI2ZpbGUtY29uc3RydWN0b3JcbiAgICAvLyBFdmVyeSBcIi9cIiBjaGFyYWN0ZXIgb2YgZmlsZSBuYW1lIG11c3QgYmUgcmVwbGFjZWQgd2l0aCBhIFwiOlwiLlxuICAgIC8qKiBAcHJpdmF0ZSAqL1xuICAgIHRoaXMuX25hbWUgPSBuYW1lXG4gICAgLy8gSXQgYXBwZWFycyB0aGF0IGJyb3dzZXIgZG8gbm90IGZvbGxvdyB0aGUgc3BlYyBoZXJlLlxuICAgIC8vIFN0cmluZyhuYW1lKS5yZXBsYWNlKC9cXC8vZywgXCI6XCIpXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5fbGFzdE1vZGlmaWVkID0gb3B0aW9ucy5sYXN0TW9kaWZpZWQgfHwgRGF0ZS5ub3coKVxuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBmaWxlIHJlZmVyZW5jZWQgYnkgdGhlIEZpbGUgb2JqZWN0LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWVcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgcGF0aCB0aGUgVVJMIG9mIHRoZSBGaWxlIGlzIHJlbGF0aXZlIHRvLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0IHdlYmtpdFJlbGF0aXZlUGF0aCgpIHtcbiAgICByZXR1cm4gXCJcIlxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGxhc3QgbW9kaWZpZWQgdGltZSBvZiB0aGUgZmlsZSwgaW4gbWlsbGlzZWNvbmQgc2luY2UgdGhlIFVOSVhcbiAgICogZXBvY2ggKEphbnVhcnkgMXN0LCAxOTcwIGF0IE1pZG5pZ2h0KS5cbiAgICogQHJldHVybnMge251bWJlcn1cbiAgICovXG4gIGdldCBsYXN0TW9kaWZpZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xhc3RNb2RpZmllZFxuICB9XG5cbiAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgIHJldHVybiBcIkZpbGVcIlxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHsqfSBlcnJvclxuICogQHJldHVybnMge25ldmVyfVxuICovXG5jb25zdCBwYW5pYyA9IGVycm9yID0+IHtcbiAgdGhyb3cgZXJyb3Jcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/lib.node.js":
/*!****************************************************!*\
  !*** ./node_modules/@web-std/file/src/lib.node.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _package_js__WEBPACK_IMPORTED_MODULE_0__.Blob),\n/* harmony export */   File: () => (/* binding */ File)\n/* harmony export */ });\n/* harmony import */ var _package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./package.js */ \"(ssr)/./node_modules/@web-std/file/src/package.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file.js */ \"(ssr)/./node_modules/@web-std/file/src/file.js\");\n\n\n;\n\n\n// Electron-renderer should get the browser implementation instead of node\n// Browser configuration is not enough\n\n// Marking export as a DOM File object instead of custom class.\n/** @type {typeof globalThis.File} */\nconst File = typeof globalThis.File === \"function\" ? globalThis.File : _file_js__WEBPACK_IMPORTED_MODULE_1__.File\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvbGliLm5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFZOztBQUVaLENBQW1DO0FBQ1E7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQyx1RUFBdUUsMENBQU87O0FBRXpEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZC1tYW5kYXRlcy8uL25vZGVfbW9kdWxlcy9Ad2ViLXN0ZC9maWxlL3NyYy9saWIubm9kZS5qcz8yMmNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiXG5cbmltcG9ydCB7IEJsb2IgfSBmcm9tIFwiLi9wYWNrYWdlLmpzXCJcbmltcG9ydCB7IEZpbGUgYXMgV2ViRmlsZSB9IGZyb20gXCIuL2ZpbGUuanNcIlxuXG4vLyBFbGVjdHJvbi1yZW5kZXJlciBzaG91bGQgZ2V0IHRoZSBicm93c2VyIGltcGxlbWVudGF0aW9uIGluc3RlYWQgb2Ygbm9kZVxuLy8gQnJvd3NlciBjb25maWd1cmF0aW9uIGlzIG5vdCBlbm91Z2hcblxuLy8gTWFya2luZyBleHBvcnQgYXMgYSBET00gRmlsZSBvYmplY3QgaW5zdGVhZCBvZiBjdXN0b20gY2xhc3MuXG4vKiogQHR5cGUge3R5cGVvZiBnbG9iYWxUaGlzLkZpbGV9ICovXG5jb25zdCBGaWxlID0gdHlwZW9mIGdsb2JhbFRoaXMuRmlsZSA9PT0gXCJmdW5jdGlvblwiID8gZ2xvYmFsVGhpcy5GaWxlIDogV2ViRmlsZVxuXG5leHBvcnQgeyBGaWxlLCBCbG9iIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/file/src/package.js":
/*!***************************************************!*\
  !*** ./node_modules/@web-std/file/src/package.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Blob: () => (/* reexport safe */ _web_std_blob__WEBPACK_IMPORTED_MODULE_0__.Blob)\n/* harmony export */ });\n/* harmony import */ var _web_std_blob__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web-std/blob */ \"(ssr)/./node_modules/@web-std/blob/src/lib.node.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvcGFja2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2QtbWFuZGF0ZXMvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZmlsZS9zcmMvcGFja2FnZS5qcz9hZTNhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEJsb2IgfSBmcm9tIFwiQHdlYi1zdGQvYmxvYlwiXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/file/src/package.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/form-data/src/form-data.js":
/*!**********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/form-data.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/**\n * @implements {globalThis.FormData}\n */\nclass FormData {\n  /**\n   * @param {HTMLFormElement} [form]\n   */\n  constructor(form) {\n    /**\n     * @private\n     * @readonly\n     * @type {Array<[string, FormDataEntryValue]>}\n     */\n    this._entries = []\n\n    Object.defineProperty(this, \"_entries\", { enumerable: false })\n\n    if (isHTMLFormElement(form)) {\n      for (const element of form.elements) {\n        if (isSelectElement(element)) {\n          for (const option of element.options) {\n            if (option.selected) {\n              this.append(element.name, option.value);\n            }\n          }\n        } else if (\n          isInputElement(element) &&\n          (element.checked || ![\"radio\", \"checkbox\"].includes(element.type)) &&\n          element.name\n        ) {\n          this.append(element.name, element.value);\n        }\n      }\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"FormData\"\n  }\n\n  /**\n   * Appends a new value onto an existing key inside a FormData object, or adds\n   * the key if it does not already exist.\n   *\n   * The difference between `set` and `append` is that if the specified key\n   * already exists, `set` will overwrite all existing values with the new one,\n   * whereas `append` will append the new value onto the end of the existing\n   * set of values.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value - The name of the field whose data is\n   * contained in value.\n   * @param {string} [filename] - The filename reported to the server, when a\n   * value is a `Blob` or a `File`. The default filename for a `Blob` objects is\n   * `\"blob\"`. The default filename for a `File` is the it's name.\n   */\n  append(\n    name,\n    value = panic(\n      new TypeError(\"FormData.append: requires at least 2 arguments\")\n    ),\n    filename\n  ) {\n    this._entries.push([name, toEntryValue(value, filename)])\n  }\n\n  /**\n   * Deletes a key and all its values from a FormData object.\n   *\n   * @param {string} name\n   */\n  delete(\n    name = panic(new TypeError(\"FormData.delete: requires string argument\"))\n  ) {\n    const entries = this._entries\n    let index = 0\n    while (index < entries.length) {\n      const [entryName] = /** @type {[string, FormDataEntryValue]}*/ (\n        entries[index]\n      )\n      if (entryName === name) {\n        entries.splice(index, 1)\n      } else {\n        index++\n      }\n    }\n  }\n\n  /**\n   * Returns the first value associated with a given key from within a\n   * FormData object.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue|null}\n   */\n\n  get(name = panic(new TypeError(\"FormData.get: requires string argument\"))) {\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        return value\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns an array of all the values associated with a given key from within\n   * a FormData.\n   *\n   * @param {string} name\n   * @returns {FormDataEntryValue[]}\n   */\n  getAll(\n    name = panic(new TypeError(\"FormData.getAll: requires string argument\"))\n  ) {\n    const values = []\n    for (const [entryName, value] of this._entries) {\n      if (entryName === name) {\n        values.push(value)\n      }\n    }\n    return values\n  }\n\n  /**\n   * Returns a boolean stating whether a FormData object contains a certain key.\n   *\n   * @param {string} name\n   */\n\n  has(name = panic(new TypeError(\"FormData.has: requires string argument\"))) {\n    for (const [entryName] of this._entries) {\n      if (entryName === name) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Sets a new value for an existing key inside a FormData object, or adds the\n   * key/value if it does not already exist.\n   *\n   * @param {string} name\n   * @param {string|Blob|File} value\n   * @param {string} [filename]\n   */\n\n  set(\n    name,\n    value = panic(new TypeError(\"FormData.set: requires at least 2 arguments\")),\n    filename\n  ) {\n    let index = 0\n    const { _entries: entries } = this\n    const entryValue = toEntryValue(value, filename)\n    let wasSet = false\n    while (index < entries.length) {\n      const entry = /** @type {[string, FormDataEntryValue]}*/ (entries[index])\n      if (entry[0] === name) {\n        if (wasSet) {\n          entries.splice(index, 1)\n        } else {\n          wasSet = true\n          entry[1] = entryValue\n          index++\n        }\n      } else {\n        index++\n      }\n    }\n\n    if (!wasSet) {\n      entries.push([name, entryValue])\n    }\n  }\n\n  /**\n   * Method returns an iterator allowing to go through all key/value pairs\n   * contained in this object.\n   */\n  entries() {\n    return this._entries.values()\n  }\n\n  /**\n   * Returns an iterator allowing to go through all keys of the key/value pairs\n   * contained in this object.\n   *\n   * @returns {IterableIterator<string>}\n   */\n  *keys() {\n    for (const [name] of this._entries) {\n      yield name\n    }\n  }\n\n  /**\n   * Returns an iterator allowing to go through all values contained in this\n   * object.\n   *\n   * @returns {IterableIterator<FormDataEntryValue>}\n   */\n  *values() {\n    for (const [_, value] of this._entries) {\n      yield value\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this._entries.values()\n  }\n\n  /**\n   * @param {(value: FormDataEntryValue, key: string, parent: globalThis.FormData) => void} fn\n   * @param {any} [thisArg]\n   * @returns {void}\n   */\n  forEach(fn, thisArg) {\n    for (const [key, value] of this._entries) {\n      fn.call(thisArg, value, key, this)\n    }\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is HTMLFormElement}\n */\nconst isHTMLFormElement = value =>\n  Object.prototype.toString.call(value) === \"[object HTMLFormElement]\"\n\n/**\n * @param {string|Blob|File} value\n * @param {string} [filename]\n * @returns {FormDataEntryValue}\n */\nconst toEntryValue = (value, filename) => {\n  if (isFile(value)) {\n    return filename != null ? new BlobFile([value], filename, value) : value\n  } else if (isBlob(value)) {\n    return new BlobFile([value], filename != null ? filename : \"blob\")\n  } else {\n    if (filename != null && filename != \"\") {\n      throw new TypeError(\n        \"filename is only supported when value is Blob or File\"\n      )\n    }\n    return `${value}`\n  }\n}\n\n/**\n * @param {any} value\n * @returns {value is File}\n */\nconst isFile = value =>\n  Object.prototype.toString.call(value) === \"[object File]\" &&\n  typeof value.name === \"string\"\n\n/**\n * @param {any} value\n * @returns {value is Blob}\n */\nconst isBlob = value =>\n  Object.prototype.toString.call(value) === \"[object Blob]\"\n\n/**\n * Simple `File` implementation that just wraps a given blob.\n * @implements {globalThis.File}\n */\nconst BlobFile = class File {\n  /**\n   * @param {[Blob]} parts\n   * @param {string} name\n   * @param {FilePropertyBag} [options]\n   */\n  constructor([blob], name, { lastModified = Date.now() } = {}) {\n    this.blob = blob\n    this.name = name\n    this.lastModified = lastModified\n  }\n  get webkitRelativePath() {\n    return \"\"\n  }\n  get size() {\n    return this.blob.size\n  }\n  get type() {\n    return this.blob.type\n  }\n  /**\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [contentType]\n   */\n  slice(start, end, contentType) {\n    return this.blob.slice(start, end, contentType)\n  }\n  stream() {\n    return this.blob.stream()\n  }\n  text() {\n    return this.blob.text()\n  }\n  arrayBuffer() {\n    return this.blob.arrayBuffer()\n  }\n  get [Symbol.toStringTag]() {\n    return \"File\"\n  }\n}\n\n/**\n * @param {*} error\n * @returns {never}\n */\nconst panic = error => {\n  throw error\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLSelectElement}\n */\nfunction isSelectElement(element) {\n  return element.tagName === \"SELECT\";\n}\n\n/**\n *\n * @param {Element} element\n * @returns {element is HTMLInputElement}\n */\nfunction isInputElement(element) {\n  return element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/form-data/src/form-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/form-data/src/lib.node.js":
/*!*********************************************************!*\
  !*** ./node_modules/@web-std/form-data/src/lib.node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormData: () => (/* binding */ FormData)\n/* harmony export */ });\n/* harmony import */ var _form_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-data.js */ \"(ssr)/./node_modules/@web-std/form-data/src/form-data.js\");\n// @ts-check\n\n\n;\n\n// Electron-renderer should get the browser implementation instead of node\n// which is why we check global first.\nconst FormData =\n  typeof globalThis.FormData === \"function\"\n    ? globalThis.FormData\n    : _form_data_js__WEBPACK_IMPORTED_MODULE_0__.FormData\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZm9ybS1kYXRhL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ1k7O0FBRVosQ0FBMEM7O0FBRTFDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxNQUFNLG1EQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2QtbWFuZGF0ZXMvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvZm9ybS1kYXRhL3NyYy9saWIubm9kZS5qcz80NTFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuXCJ1c2Ugc3RyaWN0XCJcblxuaW1wb3J0ICogYXMgcG9seWZpbGwgZnJvbSBcIi4vZm9ybS1kYXRhLmpzXCJcblxuLy8gRWxlY3Ryb24tcmVuZGVyZXIgc2hvdWxkIGdldCB0aGUgYnJvd3NlciBpbXBsZW1lbnRhdGlvbiBpbnN0ZWFkIG9mIG5vZGVcbi8vIHdoaWNoIGlzIHdoeSB3ZSBjaGVjayBnbG9iYWwgZmlyc3QuXG5leHBvcnQgY29uc3QgRm9ybURhdGEgPVxuICB0eXBlb2YgZ2xvYmFsVGhpcy5Gb3JtRGF0YSA9PT0gXCJmdW5jdGlvblwiXG4gICAgPyBnbG9iYWxUaGlzLkZvcm1EYXRhXG4gICAgOiBwb2x5ZmlsbC5Gb3JtRGF0YVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/form-data/src/lib.node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web-std/stream/src/lib.node.js":
/*!******************************************************!*\
  !*** ./node_modules/@web-std/stream/src/lib.node.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ByteLengthQueuingStrategy: () => (/* binding */ ByteLengthQueuingStrategy),\n/* harmony export */   CountQueuingStrategy: () => (/* binding */ CountQueuingStrategy),\n/* harmony export */   ReadableByteStreamController: () => (/* binding */ ReadableByteStreamController),\n/* harmony export */   ReadableStream: () => (/* binding */ ReadableStream),\n/* harmony export */   ReadableStreamBYOBReader: () => (/* binding */ ReadableStreamBYOBReader),\n/* harmony export */   ReadableStreamBYOBRequest: () => (/* binding */ ReadableStreamBYOBRequest),\n/* harmony export */   ReadableStreamDefaultController: () => (/* binding */ ReadableStreamDefaultController),\n/* harmony export */   ReadableStreamDefaultReader: () => (/* binding */ ReadableStreamDefaultReader),\n/* harmony export */   TextDecoderStream: () => (/* binding */ TextDecoderStream),\n/* harmony export */   TextEncoderStream: () => (/* binding */ TextEncoderStream),\n/* harmony export */   TransformStream: () => (/* binding */ TransformStream),\n/* harmony export */   TransformStreamDefaultController: () => (/* binding */ TransformStreamDefaultController),\n/* harmony export */   WritableStream: () => (/* binding */ WritableStream),\n/* harmony export */   WritableStreamDefaultController: () => (/* binding */ WritableStreamDefaultController),\n/* harmony export */   WritableStreamDefaultWriter: () => (/* binding */ WritableStreamDefaultWriter)\n/* harmony export */ });\n/* harmony import */ var _stream_cjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stream.cjs */ \"(ssr)/./node_modules/@web-std/stream/src/stream.cjs\");\n// @ts-ignore\n\nconst {\n  ReadableStream,\n  ReadableStreamDefaultReader,\n  ReadableStreamBYOBReader,\n  ReadableStreamBYOBRequest,\n  ReadableByteStreamController,\n  ReadableStreamDefaultController,\n  TransformStream,\n  TransformStreamDefaultController,\n  WritableStream,\n  WritableStreamDefaultWriter,\n  WritableStreamDefaultController,\n  ByteLengthQueuingStrategy,\n  CountQueuingStrategy,\n  TextEncoderStream,\n  TextDecoderStream,\n} = _stream_cjs__WEBPACK_IMPORTED_MODULE_0__\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYi1zdGQvc3RyZWFtL3NyYy9saWIubm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDa0M7QUFDM0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLEVBQUUsd0NBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kLW1hbmRhdGVzLy4vbm9kZV9tb2R1bGVzL0B3ZWItc3RkL3N0cmVhbS9zcmMvbGliLm5vZGUuanM/NzlmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtaWdub3JlXG5pbXBvcnQgc3RyZWFtcyBmcm9tIFwiLi9zdHJlYW0uY2pzXCJcbmV4cG9ydCBjb25zdCB7XG4gIFJlYWRhYmxlU3RyZWFtLFxuICBSZWFkYWJsZVN0cmVhbURlZmF1bHRSZWFkZXIsXG4gIFJlYWRhYmxlU3RyZWFtQllPQlJlYWRlcixcbiAgUmVhZGFibGVTdHJlYW1CWU9CUmVxdWVzdCxcbiAgUmVhZGFibGVCeXRlU3RyZWFtQ29udHJvbGxlcixcbiAgUmVhZGFibGVTdHJlYW1EZWZhdWx0Q29udHJvbGxlcixcbiAgVHJhbnNmb3JtU3RyZWFtLFxuICBUcmFuc2Zvcm1TdHJlYW1EZWZhdWx0Q29udHJvbGxlcixcbiAgV3JpdGFibGVTdHJlYW0sXG4gIFdyaXRhYmxlU3RyZWFtRGVmYXVsdFdyaXRlcixcbiAgV3JpdGFibGVTdHJlYW1EZWZhdWx0Q29udHJvbGxlcixcbiAgQnl0ZUxlbmd0aFF1ZXVpbmdTdHJhdGVneSxcbiAgQ291bnRRdWV1aW5nU3RyYXRlZ3ksXG4gIFRleHRFbmNvZGVyU3RyZWFtLFxuICBUZXh0RGVjb2RlclN0cmVhbSxcbn0gPSBzdHJlYW1zXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web-std/stream/src/lib.node.js\n");

/***/ })

};
;